<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EvenCart.Data</name>
    </assembly>
    <members>
        <member name="T:EvenCart.Data.Attributes.NonTokenFieldAttribute">
            <summary>
            Specifies a field that can be used for token replacements processing
            </summary>
        </member>
        <member name="M:EvenCart.Data.Database.DatabaseManager.CreateSqlServerConnectionString(EvenCart.Data.Database.ConnectionStringRequest)">
            <summary>
            Creates connection string from the provider values
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Addresses.Address">
            <summary>
            Addresses associated with various entities such as User, Page etc.
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Emails.EmailMessage">
            <summary>
            Specifies fields used for sending emails
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Emails.EmailMessage.UserInfo">
            <summary>
            Specifies a user in email communication
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Gdpr.ConsentStatus">
            <summary>
            Represents status of a GDPR consent
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Gdpr.ConsentStatus.Accepted">
            <summary>
            Specifies that consent has been accepted
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Gdpr.ConsentStatus.Denied">
            <summary>
            Specifies that consent has been denied
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Gdpr.ConsentStatus.NotSelected">
            <summary>
            Specifies that consent is not yet acted upon
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Payments.TransactionRequest">
            <summary>
            A single request class to implement all types of transaction requests
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Purchases.OrderFulfillmentType">
            <summary>
            The way in which order should be fulfilled
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.OrderFulfillmentType.WholeFromSingleWarehouse">
            <summary>
            Fulfill entire order from one warehouse
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.OrderFulfillmentType.SplitToMultipleWarehouseByItem">
            <summary>
            Fulfill order from multiple warehouses restricting a single product to one warehouse
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.OrderFulfillmentType.SplitToMultipleWarehouseByItemQuantity">
            <summary>
            NSY: Fulfill order from multiple warehouses allowing single product quantities to be fulfilled across warehouses.
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Purchases.ReturnOption">
            <summary>
            Represents a return option 
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnOption.Refund">
            <summary>
            The customer should be refunded
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnOption.ReturnFresh">
            <summary>
            A return order should be created for fresh items
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnOption.ReturnRepaired">
            <summary>
            A return order should be created for repaired items
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnOption.Other">
            <summary>
            Any other option
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Purchases.ReturnRequestStatus">
            <summary>
            The status of a refund request
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Pending">
            <summary>
            The return is pending
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Authorized">
            <summary>
            The return has been authorized
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Initiated">
            <summary>
            The return process has been initiated
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.PickupScheduled">
            <summary>
            The items have been scheduled for return pickup
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.InTransit">
            <summary>
            The items have been picked up and are on way back
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.ReturnReceived">
            <summary>
            The items have been received at the warehouse
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Complete">
            <summary>
            The return is complete
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Cancelled">
            <summary>
            The return has been cancelled
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Rejected">
            <summary>
            The return has been rejected
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ReturnRequestStatus.Repaired">
            <summary>
            The return item has been repaired
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Purchases.ShipmentStatus">
            <summary>
            The status of the shiopment
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.Preparing">
            <summary>
            The shipment is being prepared
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.Packaged">
            <summary>
            The shipment has been packaged
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.InTransit">
            <summary>
            The shipment has been dispatched and is in the transit.
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.OutForDelivery">
            <summary>
            The shipment is out for delivery
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.DeliveryFailed">
            <summary>
            The delivery has failed
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.Delivered">
            <summary>
            The shipment has been delivered
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Purchases.ShipmentStatus.Returned">
            <summary>
            The shipment was returned
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Purchases.ShippingOption">
            <summary>
            Represents an individual shipping option if a shipment handler
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.Id">
            <summary>
            The unique identifier for the option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.Rate">
            <summary>
            The rate of this shipping option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.Name">
            <summary>
            The name of this shipping option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.Description">
            <summary>
            The description of the option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.DeliveryTime">
            <summary>
            The delivery time of this option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.GuaranteedDaysToDelivery">
            <summary>
            The guaranteed number of days for delivery
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Purchases.ShippingOption.Remarks">
            <summary>
            Any additional information about shipping option
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.GeneralSettings.StoreDomain">
            <summary>
            The domain where public website has been installed
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.GeneralSettings.DefaultTimeZoneId">
            <summary>
            Default timezone to be used for network
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.GeneralSettings.LogoId">
            <summary>
            The logo id of the website
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.DefaultPasswordStorageFormat">
            <summary>
            Default password format
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.ExpirePasswordDays">
            <summary>
            Specifies the number of days after last change, that user must change password
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.EmailVerificationLinkExpirationHours">
            <summary>
            The number of hours after which email verification link should expire. Set to 0 for no expiration.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.PasswordResetLinkExpirationHours">
            <summary>
            The number of hours after which password reset link should expire. Set to 0 for no expiration.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.InviteLinkExpirationHours">
            <summary>
            The number of hours after which invite link should expire. Set to 0 for no expiration.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.EmailVerificationCodeExpirationMinutes">
            <summary>
            The number of minutes after which email verification code should expire. Set to 0 for no expiration
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.EnableCaptcha">
            <summary>
            If captcha should be enabled
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.SiteKey">
            <summary>
            The site key for Google Captcha
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.SiteSecret">
            <summary>
            The site secret for Google captcha
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.BannedIps">
            <summary>
            The IP Address which are banned from accessing the site. Leave empty to allow all IP addresses.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.AdminRestrictedIps">
            <summary>
            The IP Addresses which are allowed to access admin area. Leave empty to allow all IP addresses.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.SharedVerificationKey">
            <summary>
            The private key that'll be required for POST requests if no verification token is passed
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SecuritySettings.HoneypotFieldName">
            <summary>
            The name of honeypot field to prevent bot submissions
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SystemSettings.IsInstalled">
            <summary>
            Is the application installed?
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SystemSettings.MinimumLogLevel">
            <summary>
            Specifies minimum log level that should be used for logging
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SystemSettings.UpdateFetchIntervalInHours">
            <summary>
            Specifies the update fetch interval in hours.
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SystemSettings.LatestUpdatesFetched">
            <summary>
            The latest updates fetched
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.SystemSettings.LatestFetchedOn">
            <summary>
            The latest date when updates were fetched
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.UserSettings.UserRegistrationDefaultMode">
            <summary>
            Default registration mode for users
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.UserSettings.AreUserNamesEnabled">
            <summary>
            Specifies if user names are enabled for site
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.UserSettings.AreProfilePicturesEnabled">
            <summary>
            Specifies if profile pictures are enabled
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.UserSettings.ActivateUserForConnectedAccount">
            <summary>
            Specifies if user logging in with connected account be immediately activated
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Settings.UserSettings.UseNumericCodeForActivationEmail">
            <summary>
            Specifies if activation code should be a 6 digit numeric code instead of alphanumeric strings
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.DownloadActivationType.PaymentComplete">
            <summary>
            Activation type when payment is complete
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.DownloadActivationType.Manual">
            <summary>
            Manual activation
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Shop.LengthUnit">
            <summary>
            Represents the length unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.LengthUnit.Centimeter">
            <summary>
            The centimeter unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.LengthUnit.Meter">
            <summary>
            The meter unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.LengthUnit.Feet">
            <summary>
            The feet unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.LengthUnit.Inch">
            <summary>
            The inch unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.LengthUnit.Yard">
            <summary>
            The yard unit
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Shop.WeightUnit">
            <summary>
            Represents a weight unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.WeightUnit.Gram">
            <summary>
            The gram unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.WeightUnit.Kilogram">
            <summary>
            The kilogram unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.WeightUnit.Ounce">
            <summary>
            The ounce unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.WeightUnit.Pound">
            <summary>
            The pound unit
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Shop.WeightUnit.Ton">
            <summary>
            The ton unit
            </summary>
        </member>
        <member name="T:EvenCart.Data.Entity.Users.InviteRequest">
            <summary>
            Represents a request to join the store
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Users.InviteRequest.Email">
            <summary>
            The email which sent the request
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Users.InviteRequest.CreatedOn">
            <summary>
            The date of request
            </summary>
        </member>
        <member name="P:EvenCart.Data.Entity.Users.InviteRequest.Accepted">
            <summary>
            If the request has been accepted or not
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Users.UserCodeType.PasswordReset">
            <summary>
            Specifies a code for resetting password
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Users.UserCodeType.EmailVerification">
            <summary>
            Specifies a code for email verification
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Users.UserCodeType.RegistrationInvitation">
            <summary>
            Specifies a code for registration by invitation
            </summary>
        </member>
        <member name="F:EvenCart.Data.Entity.Users.UserCodeType.EmailOtp">
            <summary>
            Specifies a 6 digit otp for email verification
            </summary>
        </member>
        <member name="F:EvenCart.Data.Enum.CreditTransactionType.Issued">
            <summary>
            Credits are issued to user
            </summary>
        </member>
        <member name="F:EvenCart.Data.Enum.CreditTransactionType.IssuedRevert">
            <summary>
            Some issued credits have been taken back
            </summary>
        </member>
        <member name="F:EvenCart.Data.Enum.CreditTransactionType.Spent">
            <summary>
            Credits are spent by user
            </summary>
        </member>
        <member name="F:EvenCart.Data.Enum.CreditTransactionType.Refund">
            <summary>
            Credits are refunded to user's account
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.LinqExtensions.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns last n elements from a sequence
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.LinqExtensions.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Returns last n elements from a sequence
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.LinqExtensions.TakeFromPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Returns specified number of elements after skipping previous pages
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.LinqExtensions.TakeFromLastPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns elements from the last page considering specified count per page
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.LinqExtensions.SelectManyRecursive``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Selects many elements recursively
            </summary>
        </member>
        <member name="M:EvenCart.Data.Extensions.StringExtensions.CleanUpSpaces(System.String)">
            <summary>
            Replaces multiple space occurances with single space in a string
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:EvenCart.Data.Helpers.HtmlUtility.StripHtml(System.String)">
            <summary>
            Strips all html from the provided html content
            </summary>
            <param name="htmlContent"></param>
            <returns></returns>
        </member>
        <member name="M:EvenCart.Data.Helpers.HtmlUtility.RemoveUnwantedTags(System.String,System.String[])">
            <summary>
            Safely removes tags other than acceptable tags from the provided html content
            </summary>
            <param name="htmlContent"></param>
            <param name="acceptableTags"></param>
            <returns></returns>
        </member>
        <member name="M:EvenCart.Data.Helpers.StringUtility.Arity(System.Int32,System.String,System.String)">
            <summary>
            Returns appropriate string based on arity of the value passed
            </summary>
        </member>
        <member name="M:EvenCart.Data.Helpers.StringUtility.FormattedJoin(System.Collections.Generic.ICollection{System.String},System.String,System.String)">
            <summary>
            Joins a string collection and returns a formatted string with separator character and words
            </summary>
        </member>
    </members>
</doc>
