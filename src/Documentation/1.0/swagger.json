{
  "openapi": "3.0.1",
  "info": {
    "title": "EvenCart Api Documentation",
    "version": "1.0"
  },
  "paths": {
    "/api/account": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account information for authenticated user",
        "operationId": "api_AccountProfile",
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Models.Users.UserModel\">user</see> object"
          }
        }
      }
    },
    "/api/addresses": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Saves an address to the database",
        "operationId": "api_AccountSaveAddress",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "The name of the addressee",
            "schema": {
              "type": "string",
              "description": "The name of the addressee",
              "nullable": true
            }
          },
          {
            "name": "Address1",
            "in": "query",
            "description": "House number, apartment/building name",
            "schema": {
              "type": "string",
              "description": "House number, apartment/building name",
              "nullable": true
            }
          },
          {
            "name": "Address2",
            "in": "query",
            "description": "Street name, locality",
            "schema": {
              "type": "string",
              "description": "Street name, locality",
              "nullable": true
            }
          },
          {
            "name": "Landmark",
            "in": "query",
            "description": "A nearby landmark for easy location",
            "schema": {
              "type": "string",
              "description": "A nearby landmark for easy location",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceId",
            "in": "query",
            "description": "The state or province id",
            "schema": {
              "type": "integer",
              "description": "The state or province id",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceName",
            "in": "query",
            "description": "The state or province name if state or province id is not known",
            "schema": {
              "type": "string",
              "description": "The state or province name if state or province id is not known",
              "nullable": true
            }
          },
          {
            "name": "City",
            "in": "query",
            "description": "The name of city",
            "schema": {
              "type": "string",
              "description": "The name of city",
              "nullable": true
            }
          },
          {
            "name": "ZipPostalCode",
            "in": "query",
            "description": "The postal code",
            "schema": {
              "type": "string",
              "description": "The postal code",
              "nullable": true
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
            "schema": {
              "type": "integer",
              "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
              "format": "int32"
            }
          },
          {
            "name": "CountryName",
            "in": "query",
            "description": "The name of the country",
            "schema": {
              "type": "string",
              "description": "The name of the country",
              "nullable": true
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "description": "The phone number of the addressee",
            "schema": {
              "type": "string",
              "description": "The phone number of the addressee",
              "nullable": true
            }
          },
          {
            "name": "Website",
            "in": "query",
            "description": "The website address of the addressee",
            "schema": {
              "type": "string",
              "description": "The website address of the addressee",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "The emai laddress of the addressee",
            "schema": {
              "type": "string",
              "description": "The emai laddress of the addressee",
              "nullable": true
            }
          },
          {
            "name": "AddressType",
            "in": "query",
            "description": "The address type",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/addresses/{addressId}": {
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Deletes an address",
        "operationId": "api_AccountDeleteAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "The identifier of the address to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The identifier of the address to be deleted",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      },
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Gets a single address for authenticated user",
        "operationId": "api_SingleAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "description": "The id of the address to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the address to retrieve",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Models.Addresses.AddressInfoModel\">address</see> object along with availableCountries and availableAddressTypes as <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\">items</see> lists."
          }
        }
      }
    },
    "/api/account/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Gets the addresses of authenticated user",
        "operationId": "api_AccountAddresses",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Addresses.AddressInfoModel\">addresses</see>"
          }
        }
      }
    },
    "/api/authentication/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticates a user",
        "operationId": "api_Login",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "The email of the user",
            "schema": {
              "type": "string",
              "description": "The email of the user",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password of the user",
            "schema": {
              "type": "string",
              "description": "The password of the user",
              "nullable": true
            }
          },
          {
            "name": "RememberMe",
            "in": "query",
            "description": "If a long live cookie should be created. The parameter is ignored if token is set to true",
            "schema": {
              "type": "boolean",
              "description": "If a long live cookie should be created. The parameter is ignored if token is set to true"
            }
          },
          {
            "name": "ReturnUrl",
            "in": "query",
            "description": "The url where the user be redirected after login. The parameter is sent with response.",
            "schema": {
              "type": "string",
              "description": "The url where the user be redirected after login. The parameter is sent with response.",
              "nullable": true
            }
          },
          {
            "name": "Token",
            "in": "query",
            "description": "If true sends an authentication token in the response. If false, sends an authentication cookie.",
            "schema": {
              "type": "boolean",
              "description": "If true sends an authentication token in the response. If false, sends an authentication cookie."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An authentication cookie if token was set to false. Returns a token string if token parameter was sent as true."
          }
        }
      }
    },
    "/api/authentication/password-reset": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sends a password recovery email to the user",
        "operationId": "api_ForgotPassword",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "The email whose password needs to be recovered.",
            "schema": {
              "type": "string",
              "description": "The email whose password needs to be recovered.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a success response object and sends password reset email to the user"
          }
        }
      }
    },
    "/api/authentication/password-change": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resets the password of the user",
        "operationId": "api_ChangePassword",
        "parameters": [
          {
            "name": "CurrentPassword",
            "in": "query",
            "description": "The current password of the user. Ignore if a valid code parameter is being passed",
            "schema": {
              "type": "string",
              "description": "The current password of the user. Ignore if a valid code parameter is being passed",
              "nullable": true
            }
          },
          {
            "name": "Code",
            "in": "query",
            "description": "The code for changing the password. Ignore if currentPassword parameter is being passed",
            "schema": {
              "type": "string",
              "description": "The code for changing the password. Ignore if currentPassword parameter is being passed",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The new password for the user",
            "schema": {
              "type": "string",
              "description": "The new password for the user",
              "nullable": true
            }
          },
          {
            "name": "ConfirmPassword",
            "in": "query",
            "description": "The confirm password for the user. Should be same as password field",
            "schema": {
              "type": "string",
              "description": "The confirm password for the user. Should be same as password field",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/authentication/register": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Gets the consents(if any) required to complete the registration",
        "operationId": "api_Register",
        "parameters": [
          {
            "name": "InviteCode",
            "in": "query",
            "description": "The invite code if any for the request.",
            "schema": {
              "type": "string",
              "description": "The invite code if any for the request.",
              "nullable": true
            }
          },
          {
            "name": "AffiliateCode",
            "in": "query",
            "description": "The affiliate code if any for the request",
            "schema": {
              "type": "string",
              "description": "The affiliate code if any for the request",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consents</see>"
          }
        }
      },
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Registers a new user on the site",
        "operationId": "api_Register",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "The email of new user",
            "schema": {
              "type": "string",
              "description": "The email of new user",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "description": "The password that'll be used for login. It is case sensitive.",
            "schema": {
              "type": "string",
              "description": "The password that'll be used for login. It is case sensitive.",
              "nullable": true
            }
          },
          {
            "name": "ConfirmPassword",
            "in": "query",
            "description": "The password that'll be used for login. This should be same as <see cref=\"P:EvenCart.Models.Authentication.RegisterModel.Password\"></see> and is case sensitive.",
            "schema": {
              "type": "string",
              "description": "The password that'll be used for login. This should be same as <see cref=\"P:EvenCart.Models.Authentication.RegisterModel.Password\"></see> and is case sensitive.",
              "nullable": true
            }
          },
          {
            "name": "Consents",
            "in": "query",
            "description": "The <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consents</see> that the user has agreed or denied to.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Gdpr.ConsentModel"
              },
              "description": "The <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consents</see> that the user has agreed or denied to.",
              "nullable": true
            }
          },
          {
            "name": "InviteCode",
            "in": "query",
            "description": "The invite code if any for registration",
            "schema": {
              "type": "string",
              "description": "The invite code if any for registration",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/authentication/logout": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs the current user out. Valid only for cookie authentication",
        "operationId": "api_Logout",
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/authentication/request-invite": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Adds an invitation request to join the site",
        "operationId": "api_RequestInvite",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/authentication/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verifies the email address with the code and immediately logs in the user",
        "operationId": "api_VerifyEmail",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "The email of the user",
            "schema": {
              "type": "string",
              "description": "The email of the user",
              "nullable": true
            }
          },
          {
            "name": "Code",
            "in": "query",
            "description": "The code for verification",
            "schema": {
              "type": "string",
              "description": "The code for verification",
              "nullable": true
            }
          },
          {
            "name": "Token",
            "in": "query",
            "description": "Set to true if a token should be returned upon successful login",
            "schema": {
              "type": "boolean",
              "description": "Set to true if a token should be returned upon successful login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/availableattributes/suggestions": {
      "get": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Get attribute suggestions based on the query parameter",
        "operationId": "api_Admin.GetAttributeSuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "The search string for query",
            "schema": {
              "type": "string",
              "description": "The search string for query",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Common.AutocompleteModel\">suggestion</see> objects"
          }
        }
      }
    },
    "/admin/api/availableattributes/values/suggestions/{attributeId}": {
      "get": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Gets suggestions for values corresponding to an attribute",
        "operationId": "api_Admin.GetAttributeValueSuggestions",
        "parameters": [
          {
            "name": "attributeId",
            "in": "path",
            "description": "The id of the attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the attribute",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Common.AutocompleteModel\">suggestion</see> objects"
          }
        }
      }
    },
    "/admin/api/availableattributes": {
      "get": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Gets the available attributes",
        "operationId": "api_Admin.AvailableAttributesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.AvailableAttributeModel\">attribute</see> objects as 'attributes'"
          }
        }
      },
      "post": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Saves the available attribute to the database",
        "operationId": "api_Admin.SaveAvailableAttribute",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "The name of the attribute",
            "schema": {
              "type": "string",
              "description": "The name of the attribute",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "The description of the attribute",
            "schema": {
              "type": "string",
              "description": "The description of the attribute",
              "nullable": true
            }
          },
          {
            "name": "AttributeValues",
            "in": "query",
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel\">attributeValue</see> objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel"
              },
              "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel\">attributeValue</see> objects",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/availableattributes/{availableAttributeId}": {
      "get": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Gets a single attribute",
        "operationId": "api_Admin.GetAvailableAttribute",
        "parameters": [
          {
            "name": "availableAttributeId",
            "in": "path",
            "description": "The id of available attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of available attribute",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.AvailableAttributeModel\">attribute</see> object with specified availableAttributeId"
          }
        }
      }
    },
    "/admin/api/availableattributes/delete": {
      "post": {
        "tags": [
          "AvailableAttributes"
        ],
        "summary": "Deletes an available attribute",
        "operationId": "api_Admin.DeleteAvailableAttribute",
        "parameters": [
          {
            "name": "attributeId",
            "in": "query",
            "description": "The id of the attribute to be deleted",
            "schema": {
              "type": "integer",
              "description": "The id of the attribute to be deleted",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/cart/add": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Adds a product to the cart of authenticated user",
        "operationId": "api_AddToCart",
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "description": "The id of product to be added",
            "schema": {
              "type": "integer",
              "description": "The id of product to be added",
              "format": "int32"
            }
          },
          {
            "name": "AttributeJson",
            "in": "query",
            "description": "The list of product attributes as json.  Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The list of product attributes as json.  Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "ComparePrice",
            "in": "query",
            "description": "The price that'll be used for comparison. Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The price that'll be used for comparison. Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "Price",
            "in": "query",
            "description": "The price of the product",
            "schema": {
              "type": "number",
              "description": "The price of the product",
              "format": "double"
            }
          },
          {
            "name": "Quantity",
            "in": "query",
            "description": "The quantity that needs to be added to the cart.",
            "schema": {
              "type": "integer",
              "description": "The quantity that needs to be added to the cart.",
              "format": "int32"
            }
          },
          {
            "name": "Tax",
            "in": "query",
            "description": "The calculated tax for the product. Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The calculated tax for the product. Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "TaxPercent",
            "in": "query",
            "description": "The tax percent for product.  Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The tax percent for product.  Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "Discount",
            "in": "query",
            "description": "The discount for the product.  Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The discount for the product.  Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "FinalPrice",
            "in": "query",
            "description": "The final price of the product.  Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The final price of the product.  Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "IsWishlist",
            "in": "query",
            "description": "Set to true if product should be added to wishlist instead of cart.",
            "schema": {
              "type": "boolean",
              "description": "Set to true if product should be added to wishlist instead of cart."
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "description": "A collection of <see cref=\"T:EvenCart.Models.Products.ProductAttributeModel\">attributes</see> that identify a product variant",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Products.ProductAttributeModel"
              },
              "description": "A collection of <see cref=\"T:EvenCart.Models.Products.ProductAttributeModel\">attributes</see> that identify a product variant",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/cart/update": {
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Updates a cart item for authenticated user",
        "operationId": "api_UpdateCart",
        "parameters": [
          {
            "name": "DiscountCoupon",
            "in": "query",
            "description": "The discount coupon to be applied to the cart",
            "schema": {
              "type": "string",
              "description": "The discount coupon to be applied to the cart",
              "nullable": true
            }
          },
          {
            "name": "GiftCode",
            "in": "query",
            "description": "The gift card to be applied to the cart",
            "schema": {
              "type": "string",
              "description": "The gift card to be applied to the cart",
              "nullable": true
            }
          },
          {
            "name": "CartItemId",
            "in": "query",
            "description": "If a cart item is being updated, the id of cart item",
            "schema": {
              "type": "integer",
              "description": "If a cart item is being updated, the id of cart item",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Quantity",
            "in": "query",
            "description": "The updated quantity of the cart item to be updated",
            "schema": {
              "type": "integer",
              "description": "The updated quantity of the cart item to be updated",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RemoveCoupon",
            "in": "query",
            "description": "Set to true if an already applied coupon needs to be removed from the cart",
            "schema": {
              "type": "boolean",
              "description": "Set to true if an already applied coupon needs to be removed from the cart"
            }
          },
          {
            "name": "IsWishlist",
            "in": "query",
            "description": "Set to true if updates are being done on wishlist. Set to false if updates are being done on cart",
            "schema": {
              "type": "boolean",
              "description": "Set to true if updates are being done on wishlist. Set to false if updates are being done on cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/account/wishlist": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Gets the wishlist of the authenticated user",
        "operationId": "api_AccountWishlist",
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Infrastructure.ViewEngines.GlobalObjects.Implementations.CartImplementation\">wishlist</see> object"
          }
        }
      }
    },
    "/admin/api/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "api_Admin.CatalogsList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "api_Admin.SaveCatalog",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StoreIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/catalogs/{catalogId}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "api_Admin.GetCatalog",
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/catalogs/delete": {
      "post": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "api_Admin.DeleteCatalog",
        "parameters": [
          {
            "name": "catalogId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories/suggestions": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.GetCategorySuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.CategoriesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.SaveCategory",
        "parameters": [
          {
            "name": "FullCategoryPath",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ImageUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MediaId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.EditCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories/tree": {
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.SaveCategoryTrees",
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories/displayorder": {
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.UpdateCategoryDisplayOrder",
        "parameters": [
          {
            "name": "categoryModels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.CategoryModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/categories/delete": {
      "post": {
        "tags": [
          "Categories"
        ],
        "operationId": "api_Admin.DeleteCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/checkout/billing-shipping": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Saves the address information for the authenticated user's cart",
        "operationId": "api_CheckoutAddress",
        "parameters": [
          {
            "name": "UseDifferentShippingAddress",
            "in": "query",
            "description": "Set to true to use a different shipping address than the billing address",
            "schema": {
              "type": "boolean",
              "description": "Set to true to use a different shipping address than the billing address"
            }
          },
          {
            "name": "BillingAddress.Name",
            "in": "query",
            "description": "The name of the addressee",
            "schema": {
              "type": "string",
              "description": "The name of the addressee",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Address1",
            "in": "query",
            "description": "House number, apartment/building name",
            "schema": {
              "type": "string",
              "description": "House number, apartment/building name",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Address2",
            "in": "query",
            "description": "Street name, locality",
            "schema": {
              "type": "string",
              "description": "Street name, locality",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Landmark",
            "in": "query",
            "description": "A nearby landmark for easy location",
            "schema": {
              "type": "string",
              "description": "A nearby landmark for easy location",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.StateProvinceId",
            "in": "query",
            "description": "The state or province id",
            "schema": {
              "type": "integer",
              "description": "The state or province id",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.StateProvinceName",
            "in": "query",
            "description": "The state or province name if state or province id is not known",
            "schema": {
              "type": "string",
              "description": "The state or province name if state or province id is not known",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.City",
            "in": "query",
            "description": "The name of city",
            "schema": {
              "type": "string",
              "description": "The name of city",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.ZipPostalCode",
            "in": "query",
            "description": "The postal code",
            "schema": {
              "type": "string",
              "description": "The postal code",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.CountryId",
            "in": "query",
            "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
            "schema": {
              "type": "integer",
              "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
              "format": "int32"
            }
          },
          {
            "name": "BillingAddress.CountryName",
            "in": "query",
            "description": "The name of the country",
            "schema": {
              "type": "string",
              "description": "The name of the country",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Phone",
            "in": "query",
            "description": "The phone number of the addressee",
            "schema": {
              "type": "string",
              "description": "The phone number of the addressee",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Website",
            "in": "query",
            "description": "The website address of the addressee",
            "schema": {
              "type": "string",
              "description": "The website address of the addressee",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.Email",
            "in": "query",
            "description": "The emai laddress of the addressee",
            "schema": {
              "type": "string",
              "description": "The emai laddress of the addressee",
              "nullable": true
            }
          },
          {
            "name": "BillingAddress.AddressType",
            "in": "query",
            "description": "The address type",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
            }
          },
          {
            "name": "BillingAddress.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "ShippingAddress.Name",
            "in": "query",
            "description": "The name of the addressee",
            "schema": {
              "type": "string",
              "description": "The name of the addressee",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Address1",
            "in": "query",
            "description": "House number, apartment/building name",
            "schema": {
              "type": "string",
              "description": "House number, apartment/building name",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Address2",
            "in": "query",
            "description": "Street name, locality",
            "schema": {
              "type": "string",
              "description": "Street name, locality",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Landmark",
            "in": "query",
            "description": "A nearby landmark for easy location",
            "schema": {
              "type": "string",
              "description": "A nearby landmark for easy location",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.StateProvinceId",
            "in": "query",
            "description": "The state or province id",
            "schema": {
              "type": "integer",
              "description": "The state or province id",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.StateProvinceName",
            "in": "query",
            "description": "The state or province name if state or province id is not known",
            "schema": {
              "type": "string",
              "description": "The state or province name if state or province id is not known",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.City",
            "in": "query",
            "description": "The name of city",
            "schema": {
              "type": "string",
              "description": "The name of city",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.ZipPostalCode",
            "in": "query",
            "description": "The postal code",
            "schema": {
              "type": "string",
              "description": "The postal code",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.CountryId",
            "in": "query",
            "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
            "schema": {
              "type": "integer",
              "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
              "format": "int32"
            }
          },
          {
            "name": "ShippingAddress.CountryName",
            "in": "query",
            "description": "The name of the country",
            "schema": {
              "type": "string",
              "description": "The name of the country",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Phone",
            "in": "query",
            "description": "The phone number of the addressee",
            "schema": {
              "type": "string",
              "description": "The phone number of the addressee",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Website",
            "in": "query",
            "description": "The website address of the addressee",
            "schema": {
              "type": "string",
              "description": "The website address of the addressee",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.Email",
            "in": "query",
            "description": "The emai laddress of the addressee",
            "schema": {
              "type": "string",
              "description": "The emai laddress of the addressee",
              "nullable": true
            }
          },
          {
            "name": "ShippingAddress.AddressType",
            "in": "query",
            "description": "The address type",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
            }
          },
          {
            "name": "ShippingAddress.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/checkout/shipping-options": {
      "get": {
        "tags": [
          "Checkout"
        ],
        "summary": "Gets the shipping options available for selected shipping method",
        "operationId": "api_CheckoutShippingOptions",
        "parameters": [
          {
            "name": "shippingMethodSystemName",
            "in": "query",
            "description": "The system name of the shipping method",
            "schema": {
              "type": "string",
              "description": "The system name of the shipping method",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available shipping options"
          }
        }
      },
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Saves shipping info for the cart",
        "operationId": "api_CheckoutShippingOptions",
        "parameters": [
          {
            "name": "ShippingMethod.SystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethod.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethod.Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethod.Fee",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ShippingOption",
            "in": "query",
            "description": "The list of <see cref=\"T:EvenCart.Models.Checkout.ShippingOptionModel\">shipping option</see> to be used. Ignore if not applicable.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Checkout.ShippingOptionModel"
              },
              "description": "The list of <see cref=\"T:EvenCart.Models.Checkout.ShippingOptionModel\">shipping option</see> to be used. Ignore if not applicable.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/checkout/payment": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Saves the payment information for the authenticated user's cart",
        "operationId": "api_CheckoutPayment",
        "parameters": [
          {
            "name": "SystemName",
            "in": "query",
            "description": "The payment method system name",
            "schema": {
              "type": "string",
              "description": "The payment method system name",
              "nullable": true
            }
          },
          {
            "name": "FriendlyName",
            "in": "query",
            "description": "The friendly name for payment method. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The friendly name for payment method. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "The description of payment method. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The description of payment method. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "Fee",
            "in": "query",
            "description": "The additional fee for payment method. Ignored for POST requests.",
            "schema": {
              "type": "number",
              "description": "The additional fee for payment method. Ignored for POST requests.",
              "format": "double"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "description": "The url to redirect for payment method processing. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The url to redirect for payment method processing. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "OrderGuid",
            "in": "query",
            "description": "The order guid for which this payment method is being used. This is used only for retrying a previously failed order.",
            "schema": {
              "type": "string",
              "description": "The order guid for which this payment method is being used. This is used only for retrying a previously failed order.",
              "nullable": true
            }
          },
          {
            "name": "UseStoreCredits",
            "in": "query",
            "description": "Specifies if store credits should be used if available",
            "schema": {
              "type": "boolean",
              "description": "Specifies if store credits should be used if available"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FormCollection": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Microsoft.Extensions.Primitives.StringValues, Microsoft.Extensions.Primitives, Version=3.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]"
                    },
                    "description": "The payment information in key-value format.",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "FormCollection": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/checkout/confirm": {
      "post": {
        "tags": [
          "Checkout"
        ],
        "summary": "Completes the checkout process",
        "operationId": "api_CheckoutConfirm",
        "responses": {
          "200": {
            "description": "Depending on the payment method type, user may be returned with a url to complete the payment with redirection. Returns a unique orderGuid otherwise."
          }
        }
      }
    },
    "/api/account/connected-accounts": {
      "get": {
        "tags": [
          "ConnectedAccounts"
        ],
        "summary": "Returns the list of connected accounts to the logged in user",
        "operationId": "api_AccountConnectedAccounts",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.ConnectedAccounts.ConnectedAccountModel\">connected accounts</see> as 'connectedAccounts'"
          }
        }
      }
    },
    "/api/connectedaccounts/delete": {
      "post": {
        "tags": [
          "ConnectedAccounts"
        ],
        "summary": "Deletes a connected account for the logged in user",
        "operationId": "api_DeleteConnectedAccount",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The id of the connected account",
            "schema": {
              "type": "integer",
              "description": "The id of the connected account",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object on success"
          }
        }
      }
    },
    "/api/contentpages/contentpages/{contentPageId}": {
      "get": {
        "tags": [
          "ContentPages"
        ],
        "summary": "Gets the content page with provided identifier",
        "operationId": "api_SinglePage",
        "parameters": [
          {
            "name": "contentPageId",
            "in": "path",
            "description": "The id of the page to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the page to retrieve.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Models.Pages.ContentPageModel\">contentPage</see> object."
          }
        }
      }
    },
    "/admin/api/contentpages": {
      "get": {
        "tags": [
          "ContentPages"
        ],
        "operationId": "api_Admin.ContentPagesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ContentPages"
        ],
        "operationId": "api_Admin.SaveContentPage",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Private",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UpdatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PublishedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Template",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentPath",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StoreIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.PageTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.MetaDescription",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.MetaKeywords",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.EntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SeoMeta.EntityName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.Slug",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.LanguageCultureCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "User.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/contentpages/{contentPageId}": {
      "get": {
        "tags": [
          "ContentPages"
        ],
        "operationId": "api_Admin.GetContentPage",
        "parameters": [
          {
            "name": "contentPageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/contentpages/delete": {
      "post": {
        "tags": [
          "ContentPages"
        ],
        "operationId": "api_Admin.DeleteContentPage",
        "parameters": [
          {
            "name": "contentPageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/countries/{countryId}/states": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Gets the states for a country",
        "operationId": "api_CountryStates",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "The id of country for which states to be retrieved",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of country for which states to be retrieved",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Countries.StateOrProvinceModel\">states</see> of the country"
          }
        }
      }
    },
    "/admin/api/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.CountriesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.SaveCountry",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShippingEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/countries/{countryId}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.GetCountry",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/countries/{countryId}/states": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.StatesList",
        "parameters": [
          {
            "name": "CountryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.SaveState",
        "parameters": [
          {
            "name": "CountryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ShippingEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/countries/{countryId}/states/{stateId}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.GetState",
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/countries/states/delete": {
      "post": {
        "tags": [
          "Countries"
        ],
        "operationId": "api_Admin.DeleteState",
        "parameters": [
          {
            "name": "stateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/cultures/currencieslist": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "operationId": "api_Admin.CurrenciesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/cultures/{currencyId}": {
      "get": {
        "tags": [
          "Cultures"
        ],
        "operationId": "api_Admin.GetCurrency",
        "parameters": [
          {
            "name": "currencyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/cultures": {
      "post": {
        "tags": [
          "Cultures"
        ],
        "operationId": "api_Admin.SaveCurrency",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsoCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ExchangeRate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CultureCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CustomFormat",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Flag",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RoundingType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Cultures.Rounding"
            }
          },
          {
            "name": "NumberOfDecimalPlaces",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FlagUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/cultures/delete": {
      "post": {
        "tags": [
          "Cultures"
        ],
        "operationId": "api_Admin.DeleteCurrency",
        "parameters": [
          {
            "name": "currencyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/customlabels/suggestions/{labelType}": {
      "get": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Get label suggestions based on the query parameter",
        "operationId": "api_Admin.GetCustomLabelSuggestions",
        "parameters": [
          {
            "name": "labelType",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search string for query",
            "schema": {
              "type": "string",
              "description": "The search string for query",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Common.AutocompleteModel\">suggestion</see> objects as 'suggestions'"
          }
        }
      }
    },
    "/admin/api/customlabels/{labelType}": {
      "get": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Gets the custom labels",
        "operationId": "api_Admin.CustomLabelsList",
        "parameters": [
          {
            "name": "LabelType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Common.CustomLabelModel\">label</see> objects as 'customLabels'"
          }
        }
      }
    },
    "/admin/api/customlabels/{customLabelId}/{labelType}": {
      "get": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Gets a single custom label",
        "operationId": "api_Admin.GetCustomLabel",
        "parameters": [
          {
            "name": "customLabelId",
            "in": "path",
            "description": "The id of custom label",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of custom label",
              "format": "int32"
            }
          },
          {
            "name": "labelType",
            "in": "path",
            "description": "The type of <see cref=\"T:EvenCart.Data.Entity.Common.CustomLabelType\">label</see>",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The type of <see cref=\"T:EvenCart.Data.Entity.Common.CustomLabelType\">label</see>",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Areas.Administration.Models.Common.CustomLabelModel\">custom label</see> object as 'customLabel'"
          }
        }
      }
    },
    "/admin/api/customlabels": {
      "post": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Saves the custom label to the database",
        "operationId": "api_Admin.SaveCustomLabel",
        "parameters": [
          {
            "name": "Text",
            "in": "query",
            "description": "The text of the label",
            "schema": {
              "type": "string",
              "description": "The text of the label",
              "nullable": true
            }
          },
          {
            "name": "LabelType",
            "in": "query",
            "description": "The <see cref=\"T:EvenCart.Data.Entity.Common.CustomLabelType\">label type</see>",
            "schema": {
              "type": "string",
              "description": "The <see cref=\"T:EvenCart.Data.Entity.Common.CustomLabelType\">label type</see>",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "description": "The display order of the label",
            "schema": {
              "type": "integer",
              "description": "The display order of the label",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/customlabels/delete": {
      "post": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Deletes a custom label",
        "operationId": "api_Admin.DeleteCustomLabel",
        "parameters": [
          {
            "name": "customLabelId",
            "in": "query",
            "description": "The id of the label to be deleted",
            "schema": {
              "type": "integer",
              "description": "The id of the label to be deleted",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/customlabels/display-order": {
      "post": {
        "tags": [
          "CustomLabels"
        ],
        "summary": "Updates display order for labels",
        "operationId": "api_Admin.UpdateCustomLabelDisplayOrder",
        "parameters": [
          {
            "name": "customLabelModels",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Common.CustomLabelModel"
              },
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/dashboard/templates": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "api_Templates",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/dashboard/rawview": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "api_RawView",
        "parameters": [
          {
            "name": "viewPath",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/dashboard/set-active-currency": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Sets the active currency for user",
        "operationId": "api_SetActiveCurrency",
        "parameters": [
          {
            "name": "currencyId",
            "in": "query",
            "description": "The id of the currency",
            "schema": {
              "type": "integer",
              "description": "The id of the currency",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/admin": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "api_Admin.Dashboard",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/dashboard/templates/get": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "api_Admin.GetTemplates",
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/discounts": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "operationId": "api_Admin.DiscountsList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Discounts"
        ],
        "operationId": "api_Admin.SaveDiscount",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasCouponCode",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CouponCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "NumberOfTimesPerUser",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalNumberOfTimes",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaximumDiscountAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CalculationType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Promotions.CalculationType"
            }
          },
          {
            "name": "DiscountValue",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ExcludeAlreadyDiscountedProducts",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Expired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RestrictionType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Promotions.RestrictionType"
            }
          },
          {
            "name": "MinimumOrderSubTotal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "RestrictionValues",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Promotions.RestrictionValueModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/discounts/{discountId}": {
      "get": {
        "tags": [
          "Discounts"
        ],
        "operationId": "api_Admin.GetDiscount",
        "parameters": [
          {
            "name": "discountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Discounts"
        ],
        "operationId": "api_Admin.DeleteDiscount",
        "parameters": [
          {
            "name": "discountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/discounts/restriction/delete": {
      "post": {
        "tags": [
          "Discounts"
        ],
        "operationId": "api_Admin.DeleteDiscountRestriction",
        "parameters": [
          {
            "name": "discountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "restrictionIdentifier",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailtemplates": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.EmailTemplatesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.SaveEmailTemplate",
        "parameters": [
          {
            "name": "TemplateName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TemplateSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Template",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsMaster",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentEmailTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EmailAccountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Subject",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AdministrationEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.TemplateName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.TemplateSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.Template",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.IsMaster",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentEmailTemplate.ParentEmailTemplateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentEmailTemplate.Subject",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.AdministrationEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.ParentEmailTemplate",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Emails.EmailTemplateModel"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.FromName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.Host",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.UseSsl",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.UseDefaultCredentials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.IsDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.TestEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ParentEmailTemplate.EmailAccount.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "ParentEmailTemplate.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "EmailAccount.Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.FromName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.Host",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EmailAccount.UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.UseSsl",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EmailAccount.UseDefaultCredentials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EmailAccount.IsDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EmailAccount.TestEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailAccount.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailtemplates/{emailTemplateId}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.GetEmailTemplate",
        "parameters": [
          {
            "name": "emailTemplateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailtemplates/delete": {
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.DeleteEmailTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailaccounts": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.EmailAccountsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.SaveEmailAccount",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FromName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Host",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UseSsl",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UseDefaultCredentials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TestEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailaccounts/{emailAccountId}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.GetEmailAccount",
        "parameters": [
          {
            "name": "emailAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailaccounts/delete": {
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.DeleteEmailAccount",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailaccounts/test": {
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.TestEmailAccount",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FromName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Host",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UseSsl",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "UseDefaultCredentials",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDefault",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TestEmail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailmessages": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.EmailMessagesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.SaveEmailMessage",
        "parameters": [
          {
            "name": "Tos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Ccs",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Bccs",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "ReplyTos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Subject",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EmailBody",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsEmailBodyHtml",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SendingDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IsSent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DeleteExisting",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailmessages/{emailMessageId}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.GetEmailMessage",
        "parameters": [
          {
            "name": "emailMessageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/emails/emailmessages/delete": {
      "post": {
        "tags": [
          "Emails"
        ],
        "operationId": "api_Admin.DeleteEmailMessage",
        "parameters": [
          {
            "name": "emailMessageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/entitytags/suggestions": {
      "get": {
        "tags": [
          "EntityTags"
        ],
        "operationId": "api_Admin.GetEntityTagsSuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/account/privacy": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "summary": "Gets the current GDPR consents for authenticated user",
        "operationId": "api_AccountGdpr",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Gdpr.ConsentGroupModel\">consentGroups</see> objects"
          }
        }
      }
    },
    "/api/gdpr/save-consents": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "summary": "Saves the GDPR consents for authenticated users",
        "operationId": "api_SaveGdprPreferences",
        "parameters": [
          {
            "name": "consents",
            "in": "query",
            "description": "List of <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consent</see> objects that need to be saved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Gdpr.ConsentModel"
              },
              "description": "List of <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consent</see> objects that need to be saved",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object."
          }
        }
      }
    },
    "/admin/api/gdpr/consent-groups": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.ConsentGroupsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.SaveConsentGroup",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsSystemGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consent-groups/{consentGroupId}": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.GetConsentGroup",
        "parameters": [
          {
            "name": "consentGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consent-groups/delete": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.DeleteConsentGroup",
        "parameters": [
          {
            "name": "consentGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consent-groups/display-order": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.UpdateConsentGroupDisplayOrder",
        "parameters": [
          {
            "name": "groupModels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Gdpr.ConsentGroupModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/{consentGroupId}/consents": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.ConsentsList",
        "parameters": [
          {
            "name": "consentGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/{consentGroupId}/consents/{consentId}": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.GetConsent",
        "parameters": [
          {
            "name": "consentGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "consentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consents": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.SaveConsent",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsPluginSpecificConsent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PluginSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsRequired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LanguageCultureCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EnableLogging",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ConsentGroup.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ConsentGroup.Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ConsentGroup.DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ConsentGroup.IsSystemGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ConsentGroup.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "OneTimeSelection",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consents/delete": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.DeleteConsent",
        "parameters": [
          {
            "name": "consentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consents/display-order": {
      "post": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.UpdateConsentDisplayOrder",
        "parameters": [
          {
            "name": "consentModels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Gdpr.ConsentModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/gdpr/consent-logs/{userId}": {
      "get": {
        "tags": [
          "Gdpr"
        ],
        "operationId": "api_Admin.ConsentLogsList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/contact-us": {
      "post": {
        "tags": [
          "Home"
        ],
        "operationId": "api_ContactUs",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Subject",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Gets the logs recorded in the system",
        "operationId": "api_Admin.LogsList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Logger.LogModel\">log</see> objects as 'logs'"
          }
        }
      },
      "post": {
        "tags": [
          "Logs"
        ],
        "summary": "Deletes a specific log entry from the system",
        "operationId": "api_Admin.DeleteLog",
        "parameters": [
          {
            "name": "logId",
            "in": "query",
            "description": "The id of the log",
            "schema": {
              "type": "integer",
              "description": "The id of the log",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object."
          }
        }
      }
    },
    "/admin/api/logs/{logId}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Gets a single log entry",
        "operationId": "api_Admin.GetLog",
        "parameters": [
          {
            "name": "logId",
            "in": "path",
            "description": "The id of the entry",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the entry",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single <see cref=\"T:EvenCart.Areas.Administration.Models.Logger.LogModel\">log</see> object as 'log'"
          }
        }
      }
    },
    "/admin/api/logs/clear": {
      "post": {
        "tags": [
          "Logs"
        ],
        "summary": "Clears all the logs from the system. WARNING: Use this only if you are sure what you are doing.",
        "operationId": "api_Admin.ClearLogs",
        "responses": {
          "200": {
            "description": "A success response object."
          }
        }
      }
    },
    "/admin/api/maintenance/restart": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "api_Admin.RestartApplication",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/maintenance/purge": {
      "post": {
        "tags": [
          "Maintenance"
        ],
        "operationId": "api_Admin.PurgeCache",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/manufacturers/suggestions": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "api_Admin.GetManufacturerSuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/manufacturers": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "api_Admin.ManufacturersList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "api_Admin.SaveManufacturer",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/manufacturers/{manufacturerId}": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "api_Admin.GetManufacturer",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/manufacturers/delete": {
      "post": {
        "tags": [
          "Manufacturers"
        ],
        "operationId": "api_Admin.DeleteManufacturer",
        "parameters": [
          {
            "name": "manufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/media/upload": {
      "post": {
        "tags": [
          "Media"
        ],
        "operationId": "api_Admin.UploadMedia",
        "parameters": [
          {
            "name": "EntityName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "EntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/media/displayorder": {
      "post": {
        "tags": [
          "Media"
        ],
        "operationId": "api_Admin.UpdateMediaDisplayOrder",
        "parameters": [
          {
            "name": "media",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Media.MediaModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/media/delete": {
      "post": {
        "tags": [
          "Media"
        ],
        "operationId": "api_Admin.DeleteMedia",
        "parameters": [
          {
            "name": "mediaId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation": {
      "get": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.MenuList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.SaveMenu",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StoreIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/{menuId}": {
      "get": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.GetMenu",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/delete": {
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.DeleteMenu",
        "parameters": [
          {
            "name": "menuId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/{menuId}/menuitems/{parentMenuItemId}": {
      "get": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.MenuItemList",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parentMenuItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/{menuId}/menuitem/{menuItemId}": {
      "get": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.GetMenuItem",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/{menuId}/menuitems": {
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.SaveMenuItem",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MenuId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMetaId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Url",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CssClass",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMetaTargetName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "OpenInNewWindow",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ExtraData",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/menuitems": {
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.DeleteMenuItem",
        "parameters": [
          {
            "name": "menuItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/{menuId}/menuitems/displayorder": {
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.UpdateMenuItemDisplayOrder",
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "menuItemModel",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Navigation.MenuItemModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/navigation/menuitems/bulk": {
      "post": {
        "tags": [
          "Navigation"
        ],
        "operationId": "api_Admin.BulkCreateMenuItems",
        "parameters": [
          {
            "name": "CategoryIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Url",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ContentPageIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "MenuId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentMenuItemId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsGroup",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/orders/{orderGuid}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the order with provided order identifier",
        "operationId": "api_SingleOrder",
        "parameters": [
          {
            "name": "orderGuid",
            "in": "path",
            "description": "The unique order identifier. It's a guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique order identifier. It's a guid.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Models.Orders.OrderModel\">order</see> object"
          }
        }
      }
    },
    "/api/account/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets orders for the authenticated user",
        "operationId": "api_AccountOrders",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "description": "The start date to search the orders from. Defaults to 6 months old",
            "schema": {
              "type": "string",
              "description": "The start date to search the orders from. Defaults to 6 months old",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "The end date to search the orders to. Defaults to today.",
            "schema": {
              "type": "string",
              "description": "The end date to search the orders to. Defaults to today.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "description": "The status of order. Can be one of all, open, closed, returned or cancelled",
            "schema": {
              "type": "string",
              "description": "The status of order. Can be one of all, open, closed, returned or cancelled",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Orders.OrderModel\">orders</see> objects."
          }
        }
      }
    },
    "/api/orders/{orderGuid}/cancel": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the cancellation reasons for the order",
        "operationId": "api_CancelOrder",
        "parameters": [
          {
            "name": "orderGuid",
            "in": "path",
            "description": "The unique order identifier. It's a guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique order identifier. It's a guid.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancels the order with provided order identifier",
        "operationId": "api_CancelOrder",
        "parameters": [
          {
            "name": "orderGuid",
            "in": "path",
            "description": "The unique order identifier. It's a guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique order identifier. It's a guid.",
              "nullable": true
            }
          },
          {
            "name": "cancelReasonId",
            "in": "query",
            "description": "The reason id for cancellation",
            "schema": {
              "type": "integer",
              "description": "The reason id for cancellation",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/orders/{orderGuid}/return": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Gets the order with provided order identifier",
        "operationId": "api_ReturnOrder",
        "parameters": [
          {
            "name": "orderGuid",
            "in": "path",
            "description": "The unique order identifier. It's a guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique order identifier. It's a guid.",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The <see cref=\"T:EvenCart.Models.Orders.OrderModel\">order</see> object"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Creates a return request for an order",
        "operationId": "api_ReturnOrder",
        "parameters": [
          {
            "name": "orderGuid",
            "in": "path",
            "description": "The unique order identifier. It's a guid.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique order identifier. It's a guid.",
              "nullable": true
            }
          },
          {
            "name": "returnRequests",
            "in": "query",
            "description": "A list of <see cref=\"T:EvenCart.Models.Orders.ReturnRequestModel\">return request</see> objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Orders.ReturnRequestModel"
              },
              "description": "A list of <see cref=\"T:EvenCart.Models.Orders.ReturnRequestModel\">return request</see> objects",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.OrdersList",
        "parameters": [
          {
            "name": "OrderIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "VendorIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveOrder",
        "parameters": [
          {
            "name": "ShippingMethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethodDisplayName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SelectedShippingOption",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PaymentMethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PaymentMethodDisplayName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Discount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "Subtotal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethodFee",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "PaymentMethodFee",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "Tax",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.GetOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.CancelAdminOrder",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/{infoType}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.GetOrderInfo",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "infoType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/subscription/cancel": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.CancelAdminSubscription",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/fulfillments": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.OrderFulfillmentsList",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/fulfillment": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.GetOrderFulfillment",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveOrderFulfillment",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderFulfillments",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Orders.OrderFulfillmentModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipments": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.ShipmentsList",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveShipment",
        "parameters": [
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TrackingNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Remarks",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShippingMethodName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ShipmentStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ShipmentStatus"
            }
          },
          {
            "name": "ShipmentItems",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Orders.ShipmentItemModel"
              },
              "nullable": true
            }
          },
          {
            "name": "ShipmentHistoryItems",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Orders.ShipmentHistoryModel"
              },
              "nullable": true
            }
          },
          {
            "name": "WarehouseId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShippingLabelUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "TrackingUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SupportsLabelPurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipments/{shipmentId}/{warehouseId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.GetShipment",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "warehouseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipments/{shipmentId}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.DeleteShipment",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipment-history": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveShipmentHistory",
        "parameters": [
          {
            "name": "ShipmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShipmentStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ShipmentStatus"
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipment-history/delete": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.DeleteShipmentHistory",
        "parameters": [
          {
            "name": "ShipmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ShipmentStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ShipmentStatus"
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/shipment-label/{shipmentId}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.BuyShipmentLabel",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "shipmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/return-requests": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.ReturnRequestsList",
        "parameters": [
          {
            "name": "ReturnRequestStatus",
            "in": "query",
            "description": "The list of <see cref=\"P:EvenCart.Areas.Administration.Models.Orders.ReturnRequestSearchModel.ReturnRequestStatus\">status</see> values to restrict search results to",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ReturnRequestStatus"
              },
              "description": "The list of <see cref=\"P:EvenCart.Areas.Administration.Models.Orders.ReturnRequestSearchModel.ReturnRequestStatus\">status</see> values to restrict search results to",
              "nullable": true
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "description": "The start date to restrict the search results from",
            "schema": {
              "type": "string",
              "description": "The start date to restrict the search results from",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "The end date to restrict the search results from",
            "schema": {
              "type": "string",
              "description": "The end date to restrict the search results from",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveReturnRequest",
        "parameters": [
          {
            "name": "ReturnRequestStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ReturnRequestStatus"
            }
          },
          {
            "name": "ReturnOption",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ReturnOption"
            }
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AttributeText",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ImageUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Quantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderedQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReturnReason",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReturnAction",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CustomerComments",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StaffComments",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Remarks",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReturnOrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ReturnOrderNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.FirstName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.LastName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.MobileNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Guid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "User.UpdatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "User.LastLoginDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "User.DateOfBirth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "User.IsTaxExempt",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.Remarks",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.LastLoginIpAddress",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.ReferrerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "User.NewslettersEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.Roles",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Users.RoleModel"
              },
              "nullable": true
            }
          },
          {
            "name": "User.Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.ConfirmPassword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "User.Points",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "User.ProfilePictureId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "User.RequirePasswordChange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.IsAffiliate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.AffiliateActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "User.AffiliateFirstActivationDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "User.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/return-requests/{returnRequestId}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.GetReturnRequest",
        "parameters": [
          {
            "name": "returnRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/return-requests/delete": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.DeleteReturnRequest",
        "parameters": [
          {
            "name": "returnRequestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/downloads": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.OrderDownloadsList",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.SaveOrderDownload",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DownloadCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DownloadUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ItemDownloadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DownloadId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/transactions": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.PaymentTransactionsList",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/refund": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.ApproveRefund",
        "parameters": [
          {
            "name": "RefundOffline",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsPartialRefund",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "OrderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RefundType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.RefundType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/void": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.ApproveVoid",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/orders/{orderId}/capture": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "api_Admin.ApproveCapture",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.PluginsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.UpdatePluginStatus",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Author",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AuthorUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PluginUri",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AssemblyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ImageUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Installed",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Dirty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ConfigurationUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PendingRestart",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/widgets": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.WidgetsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.SaveWidget",
        "parameters": [
          {
            "name": "ZoneName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WidgetName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "WidgetSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PluginName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PluginSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WidgetZones",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasConfiguration",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ConfigurationUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/widgets/displayorder": {
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.UpdateWidgetsDisplayOrder",
        "parameters": [
          {
            "name": "widgetModels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Plugins.WidgetModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/widgets/delete": {
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.DeleteWidget",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/dbupgrade": {
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.UpgradeDbPlugin",
        "parameters": [
          {
            "name": "systemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/market": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "summary": "The list paginated of plugins in EvenCart marketplace",
        "operationId": "api_Admin.MarketPluginsList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Plugins.PluginInfoModel\">plugin</see> objects as 'plugins'"
          }
        }
      }
    },
    "/admin/api/plugins/payment-methods": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.PaymentMethodsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/shipping-methods": {
      "get": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.ShippingMethodsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/plugins/package-upload": {
      "post": {
        "tags": [
          "Plugins"
        ],
        "operationId": "api_Admin.UploadPackage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/s": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Searches for specific products in the catalog",
        "operationId": "api_ProductsSearchPage",
        "parameters": [
          {
            "name": "FromPrice",
            "in": "query",
            "description": "The lowest price for price range search",
            "schema": {
              "type": "number",
              "description": "The lowest price for price range search",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "ToPrice",
            "in": "query",
            "description": "The highest price for price range search",
            "schema": {
              "type": "number",
              "description": "The highest price for price range search",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "ManufacturerIds",
            "in": "query",
            "description": "A list of manufacturer ids to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "A list of manufacturer ids to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "VendorIds",
            "in": "query",
            "description": "A list of vendor ids to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "A list of vendor ids to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "description": "The category id if the search is restricted to a category",
            "schema": {
              "type": "integer",
              "description": "The category id if the search is restricted to a category",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "The order of sorting the result. Can be one of name, createdon, price or popularity",
            "schema": {
              "type": "string",
              "description": "The order of sorting the result. Can be one of name, createdon, price or popularity",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "The sort order of result",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.SortOrder"
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "The filter string to filter products. The format should be encoded string of attribute-name1:value1,value2 attribute-name2:value3",
            "schema": {
              "type": "string",
              "description": "The filter string to filter products. The format should be encoded string of attribute-name1:value1,value2 attribute-name2:value3",
              "nullable": true
            }
          },
          {
            "name": "Tags",
            "in": "query",
            "description": "A list of tags to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of tags to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Products.ProductModel\">products</see> objects"
          }
        }
      }
    },
    "/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets products from catalog.",
        "operationId": "api_ProductsPage",
        "parameters": [
          {
            "name": "FromPrice",
            "in": "query",
            "description": "The lowest price for price range search",
            "schema": {
              "type": "number",
              "description": "The lowest price for price range search",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "ToPrice",
            "in": "query",
            "description": "The highest price for price range search",
            "schema": {
              "type": "number",
              "description": "The highest price for price range search",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "ManufacturerIds",
            "in": "query",
            "description": "A list of manufacturer ids to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "A list of manufacturer ids to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "VendorIds",
            "in": "query",
            "description": "A list of vendor ids to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "description": "A list of vendor ids to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "CategoryId",
            "in": "query",
            "description": "The category id if the search is restricted to a category",
            "schema": {
              "type": "integer",
              "description": "The category id if the search is restricted to a category",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "description": "The order of sorting the result. Can be one of name, createdon, price or popularity",
            "schema": {
              "type": "string",
              "description": "The order of sorting the result. Can be one of name, createdon, price or popularity",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "description": "The sort order of result",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.SortOrder"
            }
          },
          {
            "name": "Filters",
            "in": "query",
            "description": "The filter string to filter products. The format should be encoded string of attribute-name1:value1,value2 attribute-name2:value3",
            "schema": {
              "type": "string",
              "description": "The filter string to filter products. The format should be encoded string of attribute-name1:value1,value2 attribute-name2:value3",
              "nullable": true
            }
          },
          {
            "name": "Tags",
            "in": "query",
            "description": "A list of tags to restrict the search to",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of tags to restrict the search to",
              "nullable": true
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "viewName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Products.ProductModel\">products</see> objects"
          }
        }
      }
    },
    "/api/products/upload": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Uploads a file for a product. The product must have at least one EvenCart.Data.Enum.InputFieldType.FileUpload attribute to accept uploaded file.",
        "operationId": "api_UploadFile",
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The url of the file as 'url' and the unique id of the file as 'guid'"
          }
        }
      }
    },
    "/admin/api/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductsList",
        "parameters": [
          {
            "name": "CategoryIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "ManufacturerIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "VendorIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "SortColumn",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.SortOrder"
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "Tags",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProduct",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Summary",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsShippable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsDownloadable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsFeatured",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsVisibleIndividually",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TrackInventory",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CanOrderWhenOutOfStock",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ComparePrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "Price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Sku",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Gtin",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Mpn",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MinimumPurchaseQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaximumPurchaseQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ParentProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ChargeTaxes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ManufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "TaxId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ManufacturerName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "HasVariants",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ReviewsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PackageWeight",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PackageWeightUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.WeightUnit"
            }
          },
          {
            "name": "PackageWidth",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PackageWidthUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "PackageHeight",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PackageHeightUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "PackageLength",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PackageLengthUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "AdditionalShippingCharge",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "IndividuallyShipped",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProductType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.ProductType"
            }
          },
          {
            "name": "ProductSaleType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.ProductSaleType"
            }
          },
          {
            "name": "SubscriptionCycle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.TimeCycle"
            }
          },
          {
            "name": "CycleCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TrialDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RequireLoginToPurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RequireLoginToViewPrice",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Media",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Media.MediaModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Categories",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.CategoryModel"
              },
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.PageTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.MetaDescription",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.MetaKeywords",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.EntityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SeoMeta.EntityName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.Slug",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.LanguageCultureCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SeoMeta.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "RestrictedToRoleIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "RestrictedToRoles",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"
              },
              "nullable": true
            }
          },
          {
            "name": "Tags",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Catalogs",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"
              },
              "nullable": true
            }
          },
          {
            "name": "CatalogIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.GetProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/attributes": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductAttributesList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/attributes/{productAttributeId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.EditProductAttribute",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productAttributeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/attributes": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProductAttribute",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "InputFieldType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.InputFieldType"
            }
          },
          {
            "name": "Label",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsRequired",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Values",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductAttributeValueModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/attributes/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductAttribute",
        "parameters": [
          {
            "name": "productAttributeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/attributes/values/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductAttributeValue",
        "parameters": [
          {
            "name": "productAttributeValueId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/attributes/displayorder": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.UpdateProductAttributeDisplayOrder",
        "parameters": [
          {
            "name": "productAttributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductAttributeModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/variants": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductVariantsList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/variants/{productVariantId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.EditProductVariant",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productVariantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/variants": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProductVariant",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Attributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductAttributeModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Sku",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Gtin",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Mpn",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "TrackInventory",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CanOrderWhenOutOfStock",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MediaId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/variants/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductVariant",
        "parameters": [
          {
            "name": "productVariantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/categories/displayorder": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.UpdateProductCategoryDisplayOrder",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.CategoryModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/categories/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductCategories",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.CategoryModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/specifications": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductSpecificationsList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/specifications/{groupId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductSpecificationsListByGroup",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/specifications/{productSpecificationId}/{productSpecificationGroupId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.EditProductSpecification",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productSpecificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productSpecificationGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/specifications-group/{productSpecificationId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.EditProductSpecificationGroup",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productSpecificationGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "productSpecificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/specifications": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProductSpecification",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Label",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsVisible",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsFilterable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ProductSpecificationGroupId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductSpecificationGroup.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductSpecificationGroup.DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductSpecificationGroup.ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductSpecificationGroup.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Values",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductSpecificationValueModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/specifications-group": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProductSpecificationGroup",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/specifications/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductSpecification",
        "parameters": [
          {
            "name": "productSpecificationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/specifications/values/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductSpecificationValue",
        "parameters": [
          {
            "name": "productSpecificationValueId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/suggestions": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.GetProductSpecificationsGroupSuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/specifications/displayorder": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.UpdateProductSpecificationDisplayOrder",
        "parameters": [
          {
            "name": "specifications",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductSpecificationModel"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/relations/{relationType}": {
      "get": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.ProductRelationsList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "relationType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.ProductRelationType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/relations": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.SaveProductRelation",
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RelationType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.ProductRelationType"
            }
          },
          {
            "name": "DestinationProductIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "IsReciprocal",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/relations/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.DeleteProductRelation",
        "parameters": [
          {
            "name": "productRelationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/{productId}/inventory": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets the inventory details for a product",
        "operationId": "api_Admin.InventoryList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel\">inventory</see> object as 'inventory' and a list of warehouses"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Saves the inventory details",
        "operationId": "api_Admin.SaveInventory",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          },
          {
            "name": "inventories",
            "in": "query",
            "description": "A collection of <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.InventoryModel\">inventory</see> objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Warehouse.InventoryModel"
              },
              "description": "A collection of <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.InventoryModel\">inventory</see> objects",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/products/{productId}/downloads": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get the ware house list",
        "operationId": "api_Admin.DownloadList",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.DownloadModel\">download</see> objects as 'downloads'"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Saves a download to database",
        "operationId": "api_Admin.SaveDownload",
        "parameters": [
          {
            "name": "Guid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductVariantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FileLocation",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsFileLocationUrl",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DownloadUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "RequirePurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "RequireLogin",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MaximumDownloads",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DownloadActivationType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.DownloadActivationType"
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/products/{productId}/download/{downloadId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets a download with specific id",
        "operationId": "api_Admin.GetDownload",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          },
          {
            "name": "downloadId",
            "in": "path",
            "description": "The id of the download",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the download",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.DownloadModel\">download</see> object as 'download'"
          }
        }
      }
    },
    "/admin/api/products/{productId}/downloads/upload": {
      "post": {
        "tags": [
          "Products"
        ],
        "operationId": "api_Admin.UploadDownloadFile",
        "parameters": [
          {
            "name": "ProductId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/products/delete": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Deletes specific download",
        "operationId": "api_Admin.DeleteDownload",
        "parameters": [
          {
            "name": "downloadId",
            "in": "query",
            "description": "The id of the download",
            "schema": {
              "type": "integer",
              "description": "The id of the download",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/products/display-order": {
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Updates display order for downloads",
        "operationId": "api_Admin.UpdateDownloadDisplayOrder",
        "parameters": [
          {
            "name": "downloadModels",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.DownloadModel"
              },
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/reports/stock-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "api_Admin.StockReport",
        "parameters": [
          {
            "name": "ProductSearch",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "WarehouseId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reports/orders-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "api_Admin.OrdersReport",
        "parameters": [
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "GroupBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.GroupUnit"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reports/user-orders-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "api_Admin.UserOrdersReport",
        "parameters": [
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "GroupBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.GroupUnit"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reports/products-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "api_Admin.ProductOrdersReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reports/totals": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets totals for various entities",
        "operationId": "api_Admin.TotalsReport",
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Areas.Administration.Models.Reports.TotalsReportModel\">totals</see> object"
          }
        }
      }
    },
    "/admin/api/reports/recent-orders": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets most recent 5 orders",
        "operationId": "api_Admin.RecentOrdersReport",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Orders.OrderModel\">order</see> objects as 'orders'"
          }
        }
      }
    },
    "/admin/api/reports/recent-users": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets most recent 5 user registrations",
        "operationId": "api_Admin.RecentUsersReport",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Users.UserModel\">user</see> objects as 'users'"
          }
        }
      }
    },
    "/admin/api/reports/bestsellers": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets 5 best sellers products for last year",
        "operationId": "api_Admin.BestSellersReport",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Reports.ProductOrderReportModel\">product</see> objects as 'products'"
          }
        }
      }
    },
    "/admin/api/reports/orders-chart-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets orders report based on provided date type",
        "operationId": "api_Admin.OrdersChartReport",
        "parameters": [
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "GroupBy",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.GroupUnit"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Reports.OrderReportModel\">order report</see> objects as 'reportItems'"
          }
        }
      }
    },
    "/admin/api/reports/users-chart-report": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Gets orders report based on provided date type",
        "operationId": "api_Admin.UsersChartReport",
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "description": "The start date for search.",
            "schema": {
              "type": "string",
              "description": "The start date for search.",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "The end date for search",
            "schema": {
              "type": "string",
              "description": "The end date for search",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "GroupBy",
            "in": "query",
            "description": "The unit by which results should be grouped",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Enum.GroupUnit"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Reports.UserRegistrationReportModel\">user report</see> objects as 'reportItems'"
          }
        }
      }
    },
    "/api/reviews/reviews": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Saves a product review",
        "operationId": "api_SaveUserReview",
        "parameters": [
          {
            "name": "Rating",
            "in": "query",
            "description": "The rating value between 1 and 5",
            "schema": {
              "type": "integer",
              "description": "The rating value between 1 and 5",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "description": "The title of the review",
            "schema": {
              "type": "string",
              "description": "The title of the review",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "description": "The description of the review",
            "schema": {
              "type": "string",
              "description": "The description of the review",
              "nullable": true
            }
          },
          {
            "name": "VerifiedPurchase",
            "in": "query",
            "description": "Specifies if the review was posted by the user who bought from the store. Ignored for POST requests.",
            "schema": {
              "type": "boolean",
              "description": "Specifies if the review was posted by the user who bought from the store. Ignored for POST requests."
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "description": "The creation date of review. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The creation date of review. Ignored for POST requests.",
              "format": "date-time"
            }
          },
          {
            "name": "Private",
            "in": "query",
            "description": "Specifies if user information should be kept private or public",
            "schema": {
              "type": "boolean",
              "description": "Specifies if user information should be kept private or public"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "description": "The display name of user for review. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The display name of user for review. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "description": "The id of product for which review is being posted",
            "schema": {
              "type": "integer",
              "description": "The id of product for which review is being posted",
              "format": "int32"
            }
          },
          {
            "name": "OrderId",
            "in": "query",
            "description": "The id of order for which review is being posted",
            "schema": {
              "type": "integer",
              "description": "The id of order for which review is being posted",
              "format": "int32"
            }
          },
          {
            "name": "Product.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.Summary",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.IsShippable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.IsDownloadable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.IsFeatured",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.IsVisibleIndividually",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.CanOrderWhenOutOfStock",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.ComparePrice",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "Product.Price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.Sku",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.Gtin",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.Mpn",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.MinimumPurchaseQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Product.MaximumPurchaseQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Product.CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Product.UpdatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Product.DisplayOrder",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Product.ChargeTaxes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.Deleted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.ManufacturerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Product.TaxId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Product.HasVariants",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.SeName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Product.ReviewsDisabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.PackageWeight",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.PackageWeightUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.WeightUnit"
            }
          },
          {
            "name": "Product.PackageWidth",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.PackageWidthUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "Product.PackageHeight",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.PackageHeightUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "Product.PackageThickness",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.PackageThicknessUnit",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
            }
          },
          {
            "name": "Product.AdditionalShippingCharge",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.IndividuallyShipped",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.RequireLoginToPurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.RequireLoginToViewPrice",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Product.ReviewSummary.AverageRating",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Product.ReviewSummary.TotalReviews",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Product.ReviewSummary.TotalRatings",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Product.Media",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Media.MediaModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Product.ProductAttributes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Products.ProductAttributeModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Product.ProductSpecificationGroups",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Models.Products.ProductSpecificationGroupModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Product.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/reviews/reviews/{reviewId}": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Deletes a product review",
        "operationId": "api_DeleteUserReview",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "description": "The id of the review",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the review",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/reviews/reviews/{productId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Gets product reviews",
        "operationId": "api_UserReviewsList",
        "parameters": [
          {
            "name": "ProductId",
            "in": "path",
            "description": "The id of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          },
          {
            "name": "VerifiedPurchase",
            "in": "query",
            "description": "true if only reviews with verified purchase should be returned. false otherwise.",
            "schema": {
              "type": "boolean",
              "description": "true if only reviews with verified purchase should be returned. false otherwise."
            }
          },
          {
            "name": "Rating",
            "in": "query",
            "description": "Set to a value to search reviews of that rating value",
            "schema": {
              "type": "integer",
              "description": "Set to a value to search reviews of that rating value",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Reviews.ReviewModel\">reviews</see> objects, a best and a worst <see cref=\"T:EvenCart.Models.Reviews.ReviewModel\">review</see> object, a <see cref=\"T:EvenCart.Models.Products.ProductModel\">product</see> object and a <see cref=\"T:EvenCart.Models.Reviews.AllReviewsSummaryModel\">summary</see> object."
          }
        }
      }
    },
    "/api/account/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Gets the reviews by authenticated user",
        "operationId": "api_AccountReviews",
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "description": "The id of the product",
            "schema": {
              "type": "integer",
              "description": "The id of the product",
              "format": "int32"
            }
          },
          {
            "name": "VerifiedPurchase",
            "in": "query",
            "description": "true if only reviews with verified purchase should be returned. false otherwise.",
            "schema": {
              "type": "boolean",
              "description": "true if only reviews with verified purchase should be returned. false otherwise."
            }
          },
          {
            "name": "Rating",
            "in": "query",
            "description": "Set to a value to search reviews of that rating value",
            "schema": {
              "type": "integer",
              "description": "Set to a value to search reviews of that rating value",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Reviews.ReviewModel\">reviews</see> objects and a <see cref=\"T:EvenCart.Models.Reviews.AllReviewsSummaryModel\">summary</see> object."
          }
        }
      }
    },
    "/api/reviews/reviews/user/pending": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Gets pending reviews for authenticated user",
        "operationId": "api_UserPendingReviewsList",
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Models.Reviews.PendingReviewModel\">pendingReviews</see> objects."
          }
        }
      }
    },
    "/admin/api/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "operationId": "api_Admin.ReviewsList",
        "parameters": [
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductSearch",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Reviews"
        ],
        "operationId": "api_Admin.SaveReview",
        "parameters": [
          {
            "name": "Rating",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "VerifiedPurchase",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Private",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DisplayName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProductName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Published",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reviews/delete": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "operationId": "api_Admin.DeleteReview",
        "parameters": [
          {
            "name": "reviewId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/reviews/{reviewId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "operationId": "api_Admin.GetReview",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "api_Admin.RolesList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "operationId": "api_Admin.SaveRole",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsSystemRole",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Capabilities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/roles/delete": {
      "post": {
        "tags": [
          "Roles"
        ],
        "operationId": "api_Admin.DeleteRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "operationId": "api_Admin.GetRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/scheduledtasks": {
      "get": {
        "tags": [
          "ScheduledTasks"
        ],
        "operationId": "api_Admin.ScheduledTasksList",
        "parameters": [
          {
            "name": "EnableStatus",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "ScheduledTasks"
        ],
        "operationId": "api_Admin.SaveScheduledTask",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Seconds",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsRunning",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "LastStartDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastEndDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "LastSuccessDateTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "StopOnError",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/scheduledtasks/{scheduledTaskId}": {
      "get": {
        "tags": [
          "ScheduledTasks"
        ],
        "operationId": "api_Admin.GetScheduledTask",
        "parameters": [
          {
            "name": "scheduledTaskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/scheduledtasks/run": {
      "post": {
        "tags": [
          "ScheduledTasks"
        ],
        "operationId": "api_Admin.RunScheduledTask",
        "parameters": [
          {
            "name": "scheduledTaskSystemName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/settings/{settingType}": {
      "get": {
        "tags": [
          "Settings"
        ],
        "operationId": "api_Admin.GetSettings",
        "parameters": [
          {
            "name": "settingType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": "general",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "api_Admin.SaveSettings",
        "parameters": [
          {
            "name": "StoreName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StoreDomain",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DefaultTimeZoneId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LogoId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FaviconId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EnableBreadcrumbs",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PrimaryNavigationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EnableJsBundling",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableCssBundling",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "EnableHtmlMinification",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "DefaultPageTitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DefaultMetaKeywords",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DefaultMetaDescription",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ActiveTheme",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "settingType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/settings/security/shared-key": {
      "post": {
        "tags": [
          "Settings"
        ],
        "operationId": "api_Admin.SaveSharedSecuritySetting",
        "parameters": [
          {
            "name": "sharedKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/account/store-credits": {
      "get": {
        "tags": [
          "StoreCredits"
        ],
        "operationId": "api_AccountStoreCredits",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/stores": {
      "get": {
        "tags": [
          "Stores"
        ],
        "operationId": "api_Admin.StoresList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Stores"
        ],
        "operationId": "api_Admin.SaveStore",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Live",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/stores/{storeId}": {
      "get": {
        "tags": [
          "Stores"
        ],
        "operationId": "api_Admin.GetStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/stores/delete": {
      "post": {
        "tags": [
          "Stores"
        ],
        "operationId": "api_Admin.DeleteStore",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/subscription/subscribe": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Subscribes the logged in user or email provided for a particular subscription identifier",
        "operationId": "api_SaveSubscription",
        "parameters": [
          {
            "name": "SubscriptionGuid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Data",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success or failure response object"
          }
        }
      }
    },
    "/api/subscription/unsubscribe": {
      "post": {
        "tags": [
          "Subscription"
        ],
        "summary": "Unsubscribes the logged in user or the email provided for a particular subscription identifier",
        "operationId": "api_DeleteSubscription",
        "parameters": [
          {
            "name": "SubscriptionGuid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Data",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success or failure response object"
          }
        }
      }
    },
    "/admin/api/system": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Gets the details about the software such as version, loaded assemblies etc. and system information such as available RAM, system time etc.",
        "operationId": "api_Admin.GetAbout",
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Areas.Administration.Models.System.AboutModel\">info</see> object as 'info'"
          }
        }
      }
    },
    "/admin/api/system/install": {
      "get": {
        "tags": [
          "System"
        ],
        "operationId": "api_Admin.InstallSampleData",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Handles zip file uploads containing sample data and installs it on the server database",
        "operationId": "api_Admin.InstallSampleData",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A success object"
          }
        }
      }
    },
    "/admin/api/taxes": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.TaxesList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.SaveTax",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/taxes/{taxId}": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.GetTax",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/taxes/delete": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.DeleteTax",
        "parameters": [
          {
            "name": "taxId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/taxes/{taxId}/taxrates": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.TaxRatesList",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.SaveTaxRate",
        "parameters": [
          {
            "name": "TaxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StateOrProvinceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "ZipOrPostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateOrProvinceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Rate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/taxes/{taxId}/taxrates/{taxRateId}": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.GetTaxRate",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "taxRateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/taxes/taxrates/delete": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "operationId": "api_Admin.DeleteTaxRate",
        "parameters": [
          {
            "name": "taxRateId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Saves authenticated user's information",
        "operationId": "api_AccountSaveUser",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "description": "The first name of the user",
            "schema": {
              "type": "string",
              "description": "The first name of the user",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "description": "The last name of the user",
            "schema": {
              "type": "string",
              "description": "The last name of the user",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "The full name of the user. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The full name of the user. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "description": "The email of the user",
            "schema": {
              "type": "string",
              "description": "The email of the user",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "description": "The company name of the user",
            "schema": {
              "type": "string",
              "description": "The company name of the user",
              "nullable": true
            }
          },
          {
            "name": "MobileNumber",
            "in": "query",
            "description": "The mobile number of the user",
            "schema": {
              "type": "string",
              "description": "The mobile number of the user",
              "nullable": true
            }
          },
          {
            "name": "DateOfBirth",
            "in": "query",
            "description": "The date of birth of the user",
            "schema": {
              "type": "string",
              "description": "The date of birth of the user",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Referrer",
            "in": "query",
            "description": "The referrer of the user. Ignored for POST requests.",
            "schema": {
              "type": "string",
              "description": "The referrer of the user. Ignored for POST requests.",
              "nullable": true
            }
          },
          {
            "name": "NewslettersEnabled",
            "in": "query",
            "description": "true if user has subscribed to newsletters. false otherwise.",
            "schema": {
              "type": "boolean",
              "description": "true if user has subscribed to newsletters. false otherwise."
            }
          },
          {
            "name": "TimeZoneId",
            "in": "query",
            "description": "The timezone id of the user",
            "schema": {
              "type": "string",
              "description": "The timezone id of the user",
              "nullable": true
            }
          },
          {
            "name": "CanChangeProfilePicture",
            "in": "query",
            "description": "Specifies if user can change the profile picture",
            "schema": {
              "type": "boolean",
              "description": "Specifies if user can change the profile picture"
            }
          },
          {
            "name": "ProfilePictureUrl",
            "in": "query",
            "description": "The url of the user's profile picture",
            "schema": {
              "type": "string",
              "description": "The url of the user's profile picture",
              "nullable": true
            }
          },
          {
            "name": "Points",
            "in": "query",
            "description": "The points earned by user as reputation",
            "schema": {
              "type": "integer",
              "description": "The points earned by user as reputation",
              "format": "int32"
            }
          },
          {
            "name": "IsAffiliate",
            "in": "query",
            "description": "Specifies if the user is or 'has applied to be' an affiliate",
            "schema": {
              "type": "boolean",
              "description": "Specifies if the user is or 'has applied to be' an affiliate"
            }
          },
          {
            "name": "AffiliateActive",
            "in": "query",
            "description": "Specifies if the affiliate account is active",
            "schema": {
              "type": "boolean",
              "description": "Specifies if the affiliate account is active"
            }
          },
          {
            "name": "AffiliateFirstActivationDate",
            "in": "query",
            "description": "The date of activation of affiliate account",
            "schema": {
              "type": "string",
              "description": "The date of activation of affiliate account",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/api/users/avatar": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Handles profile image upload for user",
        "operationId": "api_AccountSaveUserPicture",
        "parameters": [
          {
            "name": "EntityName",
            "in": "query",
            "description": "The name of the entity with which this media is to be linked",
            "schema": {
              "type": "string",
              "description": "The name of the entity with which this media is to be linked",
              "nullable": true
            }
          },
          {
            "name": "EntityId",
            "in": "query",
            "description": "The id of the entity",
            "schema": {
              "type": "integer",
              "description": "The id of the entity",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "MediaFile": {
                    "type": "string",
                    "description": "The file object",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "MediaFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Models.Media.MediaModel\">media</see> object as media"
          }
        }
      }
    },
    "/api/users/affiliate": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Sends request for logged in user to become an affiliate",
        "operationId": "api_RequestAffiliate",
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.UsersList",
        "parameters": [
          {
            "name": "RoleIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.SaveUser",
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CompanyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "MobileNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Guid",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "UpdatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastLoginDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateOfBirth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "IsTaxExempt",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Remarks",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LastLoginIpAddress",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ReferrerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewslettersEnabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Roles",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Users.RoleModel"
              },
              "nullable": true
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ConfirmPassword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Points",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProfilePictureId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "RequirePasswordChange",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsAffiliate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AffiliateActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "AffiliateFirstActivationDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/affiliates": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.AffiliatesList",
        "parameters": [
          {
            "name": "RoleIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.GetUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/delete": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.DeleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/addresses": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.AddressList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/addresses/{addressId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.GetAddress",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/addresses": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.SaveAddress",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address1",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address2",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Landmark",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ZipPostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CountryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Website",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "AddressType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/addresses/delete": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.DeleteAddress",
        "parameters": [
          {
            "name": "addressId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/orders": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.UserOrdersList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "VendorIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ProductIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          },
          {
            "name": "OrderStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
              },
              "nullable": true
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/capabilities": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.CapabilitiesList",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.SaveCapabilities",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "capabilityIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/cart": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.UserCart",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/points": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.UserPointsList",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/points/{userPointId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.GetUserPoint",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userPointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/points": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.SaveUserPoint",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Points",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ActivatorUserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ActivatorUser.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ActivatorUser.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/anonymize": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.AnonymizeUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/invitation-requests": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.InvitationRequestsList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.DeleteInvitationRequest",
        "parameters": [
          {
            "name": "invitationRequestId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/generate-invite-link": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.GenerateInviteLink",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "description": "The email address to which invite link needs to be sent",
            "schema": {
              "type": "string",
              "description": "The email address to which invite link needs to be sent",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/credits": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.StoreCreditsList",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/{userId}/credits/{storeCreditId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.GetStoreCredit",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "storeCreditId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/users/credits": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "api_Admin.SaveStoreCredit",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Credit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AvailableOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ExpiresOn",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/vendors": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_AccountSaveVendor",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "GstNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Tin",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Pan",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ZipPostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "VendorStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Users.VendorStatus"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/account/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_AccountVendorsList",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/vendors/{vendorId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_AccountGetVendor",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.VendorsList",
        "parameters": [
          {
            "name": "VendorStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Users.VendorStatus"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.SaveVendor",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "GstNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Tin",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Pan",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "StateProvinceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "CountryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ZipPostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "VendorStatus",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Users.VendorStatus"
            }
          },
          {
            "name": "SendNotification",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/vendors/{vendorId}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.GetVendor",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.DeleteVendor",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/vendors/{vendorId}/users": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.VendorUsersList",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.SaveVendorUser",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/vendors/{vendorId}/users/delete": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "api_Admin.DeleteVendorUser",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/admin/api/warehouse": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Get the ware house list",
        "operationId": "api_Admin.WarehouseList",
        "parameters": [
          {
            "name": "SearchPhrase",
            "in": "query",
            "description": "The text to search within the query",
            "schema": {
              "type": "string",
              "description": "The text to search within the query",
              "nullable": true
            }
          },
          {
            "name": "Current",
            "in": "query",
            "description": "The page being requested in a paginated request. Default is 1.",
            "schema": {
              "type": "integer",
              "description": "The page being requested in a paginated request. Default is 1.",
              "format": "int32"
            }
          },
          {
            "name": "RowCount",
            "in": "query",
            "description": "The total number of result rows to be returned",
            "schema": {
              "type": "integer",
              "description": "The total number of result rows to be returned",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.WarehouseModel\">warehouse</see> objects as 'warehouses'"
          }
        }
      },
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Saves a warehouse to database",
        "operationId": "api_Admin.SaveWarehouse",
        "parameters": [
          {
            "name": "Address.UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Address.Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Address1",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Address2",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Landmark",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.StateProvinceId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Address.StateProvinceName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.City",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.ZipPostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.CountryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Address.CountryName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Phone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Website",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.Email",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Address.AddressType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
            }
          },
          {
            "name": "Address.Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          },
          {
            "name": "DisplayOrder",
            "in": "query",
            "description": "The display order of the warehouse",
            "schema": {
              "type": "integer",
              "description": "The display order of the warehouse",
              "format": "int32"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The unique id of the resource",
            "schema": {
              "type": "integer",
              "description": "The unique id of the resource",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/warehouse/{warehouseId}": {
      "get": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Gets a warehouse with specific id",
        "operationId": "api_Admin.GetWarehouse",
        "parameters": [
          {
            "name": "warehouseId",
            "in": "path",
            "description": "The id of the warehouse",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The id of the warehouse",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.WarehouseModel\">warehouse</see> object as 'warehouse'"
          }
        }
      }
    },
    "/admin/api/warehouse/delete": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Deletes specific warehouse",
        "operationId": "api_Admin.DeleteWarehouse",
        "parameters": [
          {
            "name": "warehouseId",
            "in": "query",
            "description": "The id of the warehouse",
            "schema": {
              "type": "integer",
              "description": "The id of the warehouse",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/warehouse/display-order": {
      "post": {
        "tags": [
          "Warehouse"
        ],
        "summary": "Updates display order for warehouses",
        "operationId": "api_Admin.UpdateWarehouseDisplayOrder",
        "parameters": [
          {
            "name": "warehouseModels",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Warehouse.WarehouseModel"
              },
              "description": "",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A success response object"
          }
        }
      }
    },
    "/admin/api/widget/configure": {
      "get": {
        "tags": [
          "Widget"
        ],
        "operationId": "api_Admin.GetWidgetSettings",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Widget"
        ],
        "operationId": "api_Admin.SaveWidgetSettings",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject": {
        "type": "object"
      },
      "System.Reflection.MethodAttributes": {
        "enum": [
          "ReuseSlot",
          "ReuseSlot",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "MemberAccessMask",
          "UnmanagedExport",
          "Static",
          "Final",
          "Virtual",
          "HideBySig",
          "VtableLayoutMask",
          "VtableLayoutMask",
          "CheckAccessOnOverride",
          "Abstract",
          "SpecialName",
          "RTSpecialName",
          "PinvokeImpl",
          "HasSecurity",
          "RequireSecObject",
          "ReservedMask"
        ],
        "type": "string"
      },
      "System.Reflection.MethodImplAttributes": {
        "enum": [
          "Managed",
          "Managed",
          "Native",
          "OPTIL",
          "CodeTypeMask",
          "CodeTypeMask",
          "Unmanaged",
          "Unmanaged",
          "NoInlining",
          "ForwardRef",
          "Synchronized",
          "NoOptimization",
          "PreserveSig",
          "AggressiveInlining",
          "AggressiveOptimization",
          "InternalCall",
          "MaxMethodImplVal"
        ],
        "type": "string"
      },
      "System.Reflection.CallingConventions": {
        "enum": [
          "Standard",
          "VarArgs",
          "Any",
          "HasThis",
          "ExplicitThis"
        ],
        "type": "string"
      },
      "System.IntPtr": {
        "type": "object"
      },
      "System.RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        }
      },
      "System.Reflection.MemberTypes": {
        "enum": [
          "Constructor",
          "Event",
          "Field",
          "Method",
          "Property",
          "TypeInfo",
          "Custom",
          "NestedType",
          "All"
        ],
        "type": "string"
      },
      "System.ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "value": {
            "type": "object",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Reflection.MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "System.Reflection.CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.Reflection.Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/System.ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.ConstructorInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.EventAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "ReservedMask",
          "ReservedMask"
        ],
        "type": "string"
      },
      "System.Reflection.ParameterAttributes": {
        "enum": [
          "None",
          "In",
          "Out",
          "Lcid",
          "Retval",
          "Optional",
          "HasDefault",
          "HasFieldMarshal",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "System.Reflection.ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/System.Reflection.MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "type": "object",
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "type": "object",
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.ICustomAttributeProvider": {
        "type": "object"
      },
      "System.Reflection.MethodInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/System.Reflection.ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/System.Reflection.ICustomAttributeProvider"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.EventInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.FieldAttributes": {
        "enum": [
          "PrivateScope",
          "Private",
          "FamANDAssem",
          "Assembly",
          "Family",
          "FamORAssem",
          "Public",
          "FieldAccessMask",
          "Static",
          "InitOnly",
          "Literal",
          "NotSerialized",
          "HasFieldRVA",
          "SpecialName",
          "RTSpecialName",
          "HasFieldMarshal",
          "PinvokeImpl",
          "HasDefault",
          "ReservedMask"
        ],
        "type": "string"
      },
      "System.RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        }
      },
      "System.Reflection.FieldInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/System.RuntimeFieldHandle"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.PropertyAttributes": {
        "enum": [
          "None",
          "SpecialName",
          "RTSpecialName",
          "HasDefault",
          "Reserved2",
          "Reserved3",
          "Reserved4",
          "ReservedMask"
        ],
        "type": "string"
      },
      "System.Reflection.PropertyInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.GenericParameterAttributes": {
        "enum": [
          "None",
          "Covariant",
          "Contravariant",
          "VarianceMask",
          "ReferenceTypeConstraint",
          "NotNullableValueTypeConstraint",
          "DefaultConstructorConstraint",
          "SpecialConstraintMask"
        ],
        "type": "string"
      },
      "System.Reflection.TypeAttributes": {
        "enum": [
          "NotPublic",
          "NotPublic",
          "NotPublic",
          "NotPublic",
          "Public",
          "NestedPublic",
          "NestedPrivate",
          "NestedFamily",
          "NestedAssembly",
          "NestedFamANDAssem",
          "VisibilityMask",
          "VisibilityMask",
          "SequentialLayout",
          "ExplicitLayout",
          "LayoutMask",
          "ClassSemanticsMask",
          "ClassSemanticsMask",
          "Abstract",
          "Sealed",
          "SpecialName",
          "RTSpecialName",
          "Import",
          "Serializable",
          "WindowsRuntime",
          "UnicodeClass",
          "AutoClass",
          "StringFormatMask",
          "StringFormatMask",
          "HasSecurity",
          "ReservedMask",
          "BeforeFieldInit",
          "CustomFormatMask"
        ],
        "type": "string"
      },
      "System.Runtime.InteropServices.LayoutKind": {
        "enum": [
          "Sequential",
          "Explicit",
          "Auto"
        ],
        "type": "string"
      },
      "System.Runtime.InteropServices.StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.LayoutKind"
          },
          "typeId": {
            "type": "object",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/System.IntPtr"
          }
        }
      },
      "System.Reflection.TypeInfo": {
        "type": "object",
        "properties": {
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Security.SecurityRuleSet": {
        "enum": [
          "None",
          "Level1",
          "Level2"
        ],
        "type": "string"
      },
      "System.Reflection.Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/System.Reflection.MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/System.Security.SecurityRuleSet"
          }
        }
      },
      "System.Type": {
        "type": "object",
        "properties": {
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/System.Reflection.Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/System.Reflection.GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/System.Runtime.InteropServices.StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/System.Reflection.ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/System.RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Reflection.MethodBase": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/System.Reflection.MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/System.Reflection.MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/System.Reflection.CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/System.RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/System.Reflection.MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/System.Type"
          },
          "module": {
            "$ref": "#/components/schemas/System.Reflection.Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "System.Exception": {
        "type": "object",
        "properties": {
          "targetSite": {
            "$ref": "#/components/schemas/System.Reflection.MethodBase"
          },
          "stackTrace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "nullable": true,
            "readOnly": true
          },
          "innerException": {
            "$ref": "#/components/schemas/System.Exception"
          },
          "helpLink": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "hResult": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DotLiquid.Strainer": {
        "type": "object",
        "properties": {
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Reflection.MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "System.IFormatProvider": {
        "type": "object"
      },
      "DotLiquid.Context": {
        "type": "object",
        "properties": {
          "maxIterations": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "registers": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "nullable": true,
            "readOnly": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/System.Exception"
            },
            "nullable": true,
            "readOnly": true
          },
          "strainer": {
            "$ref": "#/components/schemas/DotLiquid.Strainer"
          },
          "formatProvider": {
            "$ref": "#/components/schemas/System.IFormatProvider"
          }
        }
      },
      "EvenCart.Models.Users.UserModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the user",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The full name of the user. Ignored for POST requests.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email of the user",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "The company name of the user",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "description": "The mobile number of the user",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The date of birth of the user",
            "format": "date-time",
            "nullable": true
          },
          "referrer": {
            "type": "string",
            "description": "The referrer of the user. Ignored for POST requests.",
            "nullable": true
          },
          "newslettersEnabled": {
            "type": "boolean",
            "description": "true if user has subscribed to newsletters. false otherwise."
          },
          "timeZoneId": {
            "type": "string",
            "description": "The timezone id of the user",
            "nullable": true
          },
          "canChangeProfilePicture": {
            "type": "boolean",
            "description": "Specifies if user can change the profile picture"
          },
          "profilePictureUrl": {
            "type": "string",
            "description": "The url of the user's profile picture",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "description": "The points earned by user as reputation",
            "format": "int32"
          },
          "isAffiliate": {
            "type": "boolean",
            "description": "Specifies if the user is or 'has applied to be' an affiliate"
          },
          "affiliateActive": {
            "type": "boolean",
            "description": "Specifies if the affiliate account is active"
          },
          "affiliateFirstActivationDate": {
            "type": "string",
            "description": "The date of activation of affiliate account",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Addresses.AddressType": {
        "enum": [
          "Home",
          "Office"
        ],
        "type": "string"
      },
      "EvenCart.Models.Addresses.AddressInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the addressee",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "description": "House number, apartment/building name",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "description": "Street name, locality",
            "nullable": true
          },
          "landmark": {
            "type": "string",
            "description": "A nearby landmark for easy location",
            "nullable": true
          },
          "stateProvinceId": {
            "type": "integer",
            "description": "The state or province id",
            "format": "int32",
            "nullable": true
          },
          "stateProvinceName": {
            "type": "string",
            "description": "The state or province name if state or province id is not known",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The name of city",
            "nullable": true
          },
          "zipPostalCode": {
            "type": "string",
            "description": "The postal code",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "description": "The country id. See <a href=\"#countries\">Country</a> endpoints to get country info.",
            "format": "int32"
          },
          "countryName": {
            "type": "string",
            "description": "The name of the country",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number of the addressee",
            "nullable": true
          },
          "website": {
            "type": "string",
            "description": "The website address of the addressee",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The emai laddress of the addressee",
            "nullable": true
          },
          "addressType": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Gdpr.ConsentStatus": {
        "enum": [
          "NotSelected",
          "Accepted",
          "Denied"
        ],
        "type": "string",
        "description": "Represents status of a GDPR consent"
      },
      "EvenCart.Models.Gdpr.ConsentModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the consent. It can include html tags. Ignored for POST requests.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the consent. It can include html tags. Ignored for POST requests.",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "Specifies if the consent is required. Default is false. Ignored for POST requests."
          },
          "consentStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Gdpr.ConsentStatus"
          },
          "oneTimeSelection": {
            "type": "boolean",
            "description": "If true, the consent is required to be provided during user registration. Default is false. Ignored for POST requests."
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Common.AutocompleteModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the result item",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "description": "The display text for the result item",
            "nullable": true
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "A single value for the attribute",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.AvailableAttributeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the attribute",
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel"
            },
            "description": "A list of <see cref=\"T:EvenCart.Areas.Administration.Models.Shop.AvailableAttributeValueModel\">attributeValue</see> objects",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Products.ProductAttributeValueModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of attribute value",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Enum.InputFieldType": {
        "enum": [
          "Text",
          "TextArea",
          "Wyswyg",
          "Number",
          "Email",
          "Hidden",
          "CheckBox",
          "DateTime",
          "RadioButton",
          "Color",
          "Dropdown",
          "ImageUpload",
          "FileUpload"
        ],
        "type": "string"
      },
      "EvenCart.Models.Products.ProductAttributeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of attribute",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean",
            "description": "Is the attribute required"
          },
          "availableValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Products.ProductAttributeValueModel"
            },
            "description": "A collection of <see cref=\"T:EvenCart.Models.Products.ProductAttributeValueModel\">available value</see> objects. Ignored for POST requests.",
            "nullable": true
          },
          "selectedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Products.ProductAttributeValueModel"
            },
            "description": "A collection of <see cref=\"T:EvenCart.Models.Products.ProductAttributeValueModel\">selected value</see> objects.",
            "nullable": true
          },
          "inputFieldType": {
            "$ref": "#/components/schemas/EvenCart.Data.Enum.InputFieldType"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Shop.ProductSaleType": {
        "enum": [
          "OneTime",
          "Subscription",
          "Both"
        ],
        "type": "string"
      },
      "EvenCart.Data.Entity.Shop.TimeCycle": {
        "enum": [
          "Daily",
          "Weekly",
          "Monthly",
          "Yearly"
        ],
        "type": "string"
      },
      "EvenCart.Infrastructure.ViewEngines.GlobalObjects.Implementations.CartItemImplementation": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "attributeText": {
            "type": "string",
            "nullable": true
          },
          "comparePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comparePriceFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "taxFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "taxPercent": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "discountFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "finalPrice": {
            "type": "number",
            "format": "double"
          },
          "finalPriceFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "subTotalFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "productSaleType": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.ProductSaleType"
          },
          "subscriptionCycle": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.TimeCycle"
          },
          "cycleCount": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Infrastructure.ViewEngines.GlobalObjects.Implementations.CartImplementation": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "subTotalFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "taxFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shippingMethodName": {
            "type": "string",
            "nullable": true
          },
          "shippingMethodFee": {
            "type": "number",
            "format": "double"
          },
          "shippingMethodFeeFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "shippingOptionName": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodName": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodFee": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodFeeFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "finalAmount": {
            "type": "number",
            "format": "double"
          },
          "finalAmountFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "compareFinalAmount": {
            "type": "number",
            "format": "double"
          },
          "compareFinalAmountFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Infrastructure.ViewEngines.GlobalObjects.Implementations.CartItemImplementation"
            },
            "nullable": true
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "discountFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "discountCoupon": {
            "type": "string",
            "nullable": true
          },
          "conflictingProducts": {
            "type": "boolean"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.CategoryModel": {
        "type": "object",
        "properties": {
          "fullCategoryPath": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "mediaId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Checkout.ShippingOptionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the option",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "The rate of this shipping option",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "The name of this shipping option",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the option",
            "nullable": true
          },
          "deliveryTime": {
            "type": "string",
            "description": "The delivery time of this option",
            "nullable": true
          },
          "warehouseId": {
            "type": "integer",
            "description": "The id of the warehouse",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Represents an individual shipping option of a shipment handler"
      },
      "System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Microsoft.Extensions.Primitives.StringValues, Microsoft.Extensions.Primitives, Version=3.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "readOnly": true
          }
        }
      },
      "EvenCart.Models.Users.UserMiniModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdOnLocal": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Pages.ContentPageModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "published": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdOnLocal": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOnLocal": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "publishedOn": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/EvenCart.Models.Users.UserMiniModel"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Countries.StateOrProvinceModel": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "integer",
            "description": "The country id of the state",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the state",
            "nullable": true
          },
          "published": {
            "type": "boolean",
            "description": "The publish status of state"
          },
          "shippingEnabled": {
            "type": "boolean",
            "description": "If shipping is available for the state or not"
          },
          "displayOrder": {
            "type": "integer",
            "description": "The display order of the state in the list",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Cultures.Rounding": {
        "enum": [
          "Default",
          "RoundDot00",
          "RoundDot99",
          "RoundDot99Or49",
          "RoundDot50Or00",
          "RoundDotX5",
          "RoundDotX0"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Common.CustomLabelModel": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text of the label",
            "nullable": true
          },
          "labelType": {
            "type": "string",
            "description": "The <see cref=\"T:EvenCart.Data.Entity.Common.CustomLabelType\">label type</see>",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "description": "The display order of the label",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Represents a custom label"
      },
      "EvenCart.Data.Entity.Promotions.CalculationType": {
        "enum": [
          "Percentage",
          "FixedAmount"
        ],
        "type": "string"
      },
      "EvenCart.Data.Entity.Promotions.RestrictionType": {
        "enum": [
          "Products",
          "Categories",
          "Users",
          "UserGroups",
          "Roles",
          "Vendors",
          "Manufacturers",
          "PaymentMethods",
          "ShippingMethods",
          "OrderTotal",
          "OrderSubTotal",
          "ShippingFee"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Promotions.RestrictionValueModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "restrictionIdentifier": {
            "type": "string",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Emails.EmailAccountModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "fromName": {
            "type": "string",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "useSsl": {
            "type": "boolean"
          },
          "useDefaultCredentials": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "testEmail": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Emails.EmailTemplateModel": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "templateSystemName": {
            "type": "string",
            "nullable": true
          },
          "template": {
            "type": "string",
            "nullable": true
          },
          "isMaster": {
            "type": "boolean"
          },
          "parentEmailTemplateId": {
            "type": "integer",
            "format": "int32"
          },
          "emailAccountId": {
            "type": "integer",
            "format": "int32"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "administrationEmail": {
            "type": "string",
            "nullable": true
          },
          "parentEmailTemplate": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Emails.EmailTemplateModel"
          },
          "emailAccount": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Emails.EmailAccountModel"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Gdpr.ConsentGroupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of consent group",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the group",
            "nullable": true
          },
          "consents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Gdpr.ConsentModel"
            },
            "description": "List of <see cref=\"T:EvenCart.Models.Gdpr.ConsentModel\">consents</see> that belong to this group",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Gdpr.ConsentGroupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isSystemGroup": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Gdpr.ConsentModel": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isPluginSpecificConsent": {
            "type": "boolean"
          },
          "pluginSystemName": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "languageCultureCode": {
            "type": "string",
            "nullable": true
          },
          "enableLogging": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "consentGroup": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Gdpr.ConsentGroupModel"
          },
          "oneTimeSelection": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Enum.LogLevel": {
        "enum": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Fatal"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Logger.LogModel": {
        "type": "object",
        "properties": {
          "logLevel": {
            "$ref": "#/components/schemas/EvenCart.Data.Enum.LogLevel"
          },
          "shortMessage": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "referralUrl": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Media.MediaModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Navigation.MenuItemModel": {
        "type": "object",
        "properties": {
          "menuId": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "seoMetaId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "cssClass": {
            "type": "string",
            "nullable": true
          },
          "seoMetaTargetName": {
            "type": "string",
            "nullable": true
          },
          "isGroup": {
            "type": "boolean"
          },
          "openInNewWindow": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "extraData": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Purchases.OrderStatus": {
        "enum": [
          "OnHold",
          "New",
          "Processing",
          "PartiallyShipped",
          "Shipped",
          "Complete",
          "Cancelled",
          "Closed",
          "Returned",
          "PartiallyReturned",
          "Delayed",
          "PendingCancellation",
          "SubscriptionCancelled"
        ],
        "type": "string"
      },
      "EvenCart.Data.Entity.Payments.PaymentStatus": {
        "enum": [
          "OnHold",
          "Pending",
          "Processing",
          "Complete",
          "Refunded",
          "Voided",
          "Authorized",
          "Captured",
          "RefundPending",
          "RefundedPartially",
          "Failed"
        ],
        "type": "string"
      },
      "EvenCart.Models.Orders.OrderItemModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "description": "The id of product",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "description": "The url of product image",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "description": "The name of the product",
            "nullable": true
          },
          "seName": {
            "type": "string",
            "description": "The seo slug of the product",
            "nullable": true
          },
          "attributeText": {
            "type": "string",
            "description": "The attributes representing the product variant",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "The price of the product",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "description": "The total price of the product",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product ordered",
            "format": "int32"
          },
          "tax": {
            "type": "number",
            "description": "The tax amount specific to this product",
            "format": "double"
          },
          "taxPercent": {
            "type": "number",
            "description": "The tax percent specific to this product",
            "format": "double"
          },
          "taxName": {
            "type": "string",
            "description": "The tax name applicable of this product",
            "nullable": true
          },
          "isDownloadable": {
            "type": "boolean",
            "description": "Specifies if the product is downloadable"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Purchases.ShipmentStatus": {
        "enum": [
          "Preparing",
          "Packaged",
          "InTransit",
          "OutForDelivery",
          "DeliveryFailed",
          "Delivered",
          "Returned"
        ],
        "type": "string",
        "description": "The status of the shiopment"
      },
      "EvenCart.Models.Shipments.ShipmentItemModel": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "seName": {
            "type": "string",
            "nullable": true
          },
          "attributeText": {
            "type": "string",
            "nullable": true
          },
          "orderedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "shippedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Shipments.ShipmentModel": {
        "type": "object",
        "properties": {
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "nullable": true
          },
          "shipmentStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ShipmentStatus"
          },
          "shipmentItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Shipments.ShipmentItemModel"
            },
            "nullable": true
          },
          "trackingUrl": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Orders.OrderTaxModel": {
        "type": "object",
        "properties": {
          "taxName": {
            "type": "string",
            "nullable": true
          },
          "taxPercent": {
            "type": "number",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Represents a unique tax for a single order"
      },
      "EvenCart.Models.Orders.OrderModel": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "The displayable order number",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "The unique identifier for the order",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "description": "The id of the user",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "description": "Date when order was created",
            "format": "date-time"
          },
          "createdOnLocal": {
            "type": "string",
            "description": "Date when the order was created in user's timezone",
            "format": "date-time",
            "readOnly": true
          },
          "paidOn": {
            "type": "string",
            "description": "Date when order was paid",
            "format": "date-time",
            "nullable": true
          },
          "paidOnLocal": {
            "type": "string",
            "description": "Date when the order was Paid in user's timezone",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "shippingMethodName": {
            "type": "string",
            "description": "The shipping method name used while placing the order",
            "nullable": true
          },
          "shippingMethodDisplayName": {
            "type": "string",
            "description": "The shipping method display name",
            "nullable": true
          },
          "selectedShippingOption": {
            "type": "string",
            "description": "The shipping option selected by the user",
            "nullable": true
          },
          "paymentMethodName": {
            "type": "string",
            "description": "The payment method name used while placing the order",
            "nullable": true
          },
          "paymentMethodDisplayName": {
            "type": "string",
            "description": "The payment method name used while placing the order",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "The discount amount for the order",
            "format": "double"
          },
          "discountCoupon": {
            "type": "string",
            "description": "The discount coupon that was used in the order",
            "nullable": true
          },
          "discountId": {
            "type": "integer",
            "description": "The id of the discount coupon used in the order",
            "format": "int32",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "description": "The subtotal of the order",
            "format": "double"
          },
          "shippingMethodFee": {
            "type": "number",
            "description": "Any additional fee for shipping method",
            "format": "double",
            "nullable": true
          },
          "paymentMethodFee": {
            "type": "number",
            "description": "Any additional fee for payment method",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "description": "The tax amount for the order",
            "format": "double"
          },
          "orderTotal": {
            "type": "number",
            "description": "The order total amount",
            "format": "double",
            "readOnly": true
          },
          "userGstNumber": {
            "type": "string",
            "description": "The GST number provided by user",
            "nullable": true
          },
          "userIpAddress": {
            "type": "string",
            "description": "The IP address used for placing the order",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "description": "The ISO currency code for the currency used",
            "nullable": true
          },
          "orderStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
          },
          "orderStatusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
          },
          "paymentStatusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Orders.OrderItemModel"
            },
            "description": "List of <see cref=\"T:EvenCart.Models.Orders.OrderItemModel\">orderItems</see> for this order",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/EvenCart.Models.Users.UserModel"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/EvenCart.Models.Addresses.AddressInfoModel"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EvenCart.Models.Addresses.AddressInfoModel"
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Shipments.ShipmentModel"
            },
            "description": "List of <see cref=\"T:EvenCart.Models.Shipments.ShipmentModel\">shipment</see> objects for this order",
            "nullable": true
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Orders.OrderTaxModel"
            },
            "description": "List of <see cref=\"T:EvenCart.Models.Orders.OrderTaxModel\">tax</see> objects for this order",
            "nullable": true
          },
          "isSubscription": {
            "type": "boolean",
            "description": "Specifies if the order is a subscription"
          },
          "isSubscriptionActive": {
            "type": "boolean",
            "description": "Specifies if the subscription is active"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Orders.ReturnRequestModel": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "description": "The id of the order item",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the item to return",
            "format": "int32"
          },
          "returnReasonId": {
            "type": "integer",
            "description": "The reason id for return request",
            "format": "int32"
          },
          "returnActionId": {
            "type": "integer",
            "description": "The action id for return request",
            "format": "int32"
          },
          "customerComments": {
            "type": "string",
            "description": "The comments as provided by customer",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "A return request object for single order item"
      },
      "EvenCart.Areas.Administration.Models.Orders.OrderFulfillmentModel": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "description": "The id of the order item",
            "format": "int32"
          },
          "warehouseId": {
            "type": "integer",
            "description": "The id of the warehouse",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the ordered item",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "The order fulfillment object"
      },
      "EvenCart.Areas.Administration.Models.Orders.ShipmentItemModel": {
        "type": "object",
        "properties": {
          "orderItemId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "attributeText": {
            "type": "string",
            "nullable": true
          },
          "orderedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "shippedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Orders.ShipmentHistoryModel": {
        "type": "object",
        "properties": {
          "shipmentId": {
            "type": "integer",
            "format": "int32"
          },
          "shipmentStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.ShipmentStatus"
          },
          "shipmentStatusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Purchases.ReturnRequestStatus": {
        "enum": [
          "Pending",
          "Authorized",
          "Initiated",
          "PickupScheduled",
          "InTransit",
          "ReturnReceived",
          "Complete",
          "Cancelled",
          "Rejected",
          "Repaired"
        ],
        "type": "string",
        "description": "The status of a refund request"
      },
      "EvenCart.Data.Entity.Purchases.ReturnOption": {
        "enum": [
          "Refund",
          "ReturnFresh",
          "ReturnRepaired",
          "Other"
        ],
        "type": "string",
        "description": "Represents a return option"
      },
      "EvenCart.Areas.Administration.Models.Users.RoleModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isSystemRole": {
            "type": "boolean"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Purchases.RefundType": {
        "enum": [
          "ToRespectivePaymentMethods",
          "ToStoreCredits"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Plugins.WidgetModel": {
        "type": "object",
        "properties": {
          "zoneName": {
            "type": "string",
            "nullable": true
          },
          "widgetName": {
            "type": "string",
            "nullable": true
          },
          "widgetSystemName": {
            "type": "string",
            "nullable": true
          },
          "pluginName": {
            "type": "string",
            "nullable": true
          },
          "pluginSystemName": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "widgetZones": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "hasConfiguration": {
            "type": "boolean"
          },
          "configurationUrl": {
            "type": "string",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Plugins.PluginInfoModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "systemName": {
            "type": "string",
            "nullable": true
          },
          "author": {
            "type": "string",
            "nullable": true
          },
          "authorUri": {
            "type": "string",
            "nullable": true
          },
          "pluginUri": {
            "type": "string",
            "nullable": true
          },
          "assemblyName": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "installed": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "dirty": {
            "type": "boolean"
          },
          "configurationUrl": {
            "type": "string",
            "nullable": true
          },
          "pendingRestart": {
            "type": "boolean"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Enum.SortOrder": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "EvenCart.Data.Entity.Shop.WeightUnit": {
        "enum": [
          "Gram",
          "Kilogram",
          "Ounce",
          "Pound",
          "Ton"
        ],
        "type": "string",
        "description": "Represents a weight unit"
      },
      "EvenCart.Data.Entity.Shop.LengthUnit": {
        "enum": [
          "Centimeter",
          "Meter",
          "Feet",
          "Inch",
          "Yard"
        ],
        "type": "string",
        "description": "Represents the length unit"
      },
      "EvenCart.Models.Reviews.ReviewSummaryModel": {
        "type": "object",
        "properties": {
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "totalReviews": {
            "type": "integer",
            "format": "int32"
          },
          "totalRatings": {
            "type": "integer",
            "format": "int32"
          },
          "positivePercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Media.MediaModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Products.ProductSpecificationModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "valuesCsv": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Products.ProductSpecificationGroupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "productSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Products.ProductSpecificationModel"
            },
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Products.ProductModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isShippable": {
            "type": "boolean"
          },
          "isDownloadable": {
            "type": "boolean"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "isVisibleIndividually": {
            "type": "boolean"
          },
          "canOrderWhenOutOfStock": {
            "type": "boolean"
          },
          "comparePrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "comparePriceFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "gtin": {
            "type": "string",
            "nullable": true
          },
          "mpn": {
            "type": "string",
            "nullable": true
          },
          "minimumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "maximumPurchaseQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "chargeTaxes": {
            "type": "boolean"
          },
          "published": {
            "type": "boolean"
          },
          "deleted": {
            "type": "boolean"
          },
          "manufacturerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "taxId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasVariants": {
            "type": "boolean"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "seName": {
            "type": "string",
            "nullable": true
          },
          "reviewsDisabled": {
            "type": "boolean"
          },
          "packageWeight": {
            "type": "number",
            "format": "double"
          },
          "packageWeightUnit": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.WeightUnit"
          },
          "packageWidth": {
            "type": "number",
            "format": "double"
          },
          "packageWidthUnit": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
          },
          "packageHeight": {
            "type": "number",
            "format": "double"
          },
          "packageHeightUnit": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
          },
          "packageThickness": {
            "type": "number",
            "format": "double"
          },
          "packageThicknessUnit": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.LengthUnit"
          },
          "additionalShippingCharge": {
            "type": "number",
            "format": "double"
          },
          "individuallyShipped": {
            "type": "boolean"
          },
          "requireLoginToPurchase": {
            "type": "boolean"
          },
          "requireLoginToViewPrice": {
            "type": "boolean"
          },
          "reviewSummary": {
            "$ref": "#/components/schemas/EvenCart.Models.Reviews.ReviewSummaryModel"
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Media.MediaModel"
            },
            "nullable": true
          },
          "productAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Products.ProductAttributeModel"
            },
            "nullable": true
          },
          "productSpecificationGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Models.Products.ProductSpecificationGroupModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Shop.ProductType": {
        "enum": [
          "Good",
          "Service"
        ],
        "type": "string"
      },
      "Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Microsoft.AspNetCore.Mvc.Rendering.SelectListItem": {
        "type": "object",
        "properties": {
          "disabled": {
            "type": "boolean"
          },
          "group": {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup"
          },
          "selected": {
            "type": "boolean"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.ProductAttributeValueModel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "attributeValue": {
            "type": "string",
            "nullable": true
          },
          "priceAdjustment": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.ProductAttributeModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "inputFieldType": {
            "$ref": "#/components/schemas/EvenCart.Data.Enum.InputFieldType"
          },
          "inputFieldTypeId": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "inputFieldTypeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isRequired": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductAttributeValueModel"
            },
            "nullable": true
          },
          "valuesAsSelectListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.ProductSpecificationValueModel": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "attributeValue": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.ProductSpecificationGroupModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Shop.ProductSpecificationModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isVisible": {
            "type": "boolean"
          },
          "isFilterable": {
            "type": "boolean"
          },
          "productSpecificationGroupId": {
            "type": "integer",
            "format": "int32"
          },
          "productSpecificationGroup": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductSpecificationGroupModel"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Shop.ProductSpecificationValueModel"
            },
            "nullable": true
          },
          "valuesAsSelectListItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Enum.ProductRelationType": {
        "enum": [
          "RelatedProduct",
          "CrossSell",
          "UpSell",
          "FrequentlyBoughtTogether"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel+InventoryModel": {
        "type": "object",
        "properties": {
          "warehouseId": {
            "type": "integer",
            "description": "The warehouse id",
            "format": "int32"
          },
          "warehouseName": {
            "type": "string",
            "description": "The warehouse name",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name to identify the inventory item",
            "nullable": true
          },
          "availableQuantity": {
            "type": "integer",
            "description": "The quantity that is available to customers for new purchases",
            "format": "int32"
          },
          "reservedQuantity": {
            "type": "integer",
            "description": "The quantity that is available in the warehouse but not available for new purchases due to existing orders",
            "format": "int32"
          },
          "totalQuantity": {
            "type": "integer",
            "description": "The total quantity present in the warehouse",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "The inventory object"
      },
      "EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel": {
        "type": "object",
        "properties": {
          "variants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel+InventoryModel"
            },
            "description": "A collection of <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel.InventoryModel\">variant inventory</see> objects",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel+InventoryModel"
            },
            "description": "A collection of <see cref=\"T:EvenCart.Areas.Administration.Models.Warehouse.WarehouseProductInventoryModel.InventoryModel\">product inventory</see> objects",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "The inventory information object"
      },
      "EvenCart.Areas.Administration.Models.Warehouse.InventoryModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The identifier for a single item. Can be a product id or variant id depending on if the product has variants",
            "format": "int32"
          },
          "warehouseId": {
            "type": "integer",
            "description": "The id of the warehouse",
            "format": "int32"
          },
          "totalQuantity": {
            "type": "integer",
            "description": "The total quantity of the item",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "The inventory object"
      },
      "EvenCart.Data.Entity.Shop.DownloadActivationType": {
        "enum": [
          "PaymentComplete",
          "Manual"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Shop.DownloadModel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productVariantId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fileLocation": {
            "type": "string",
            "nullable": true
          },
          "isFileLocationUrl": {
            "type": "boolean"
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true
          },
          "requirePurchase": {
            "type": "boolean"
          },
          "requireLogin": {
            "type": "boolean"
          },
          "maximumDownloads": {
            "type": "integer",
            "format": "int32"
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32"
          },
          "downloadActivationType": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.DownloadActivationType"
          },
          "published": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Enum.GroupUnit": {
        "enum": [
          "Days",
          "Weeks",
          "Months",
          "Years"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Reports.TotalsReportModel": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "integer",
            "description": "The total users in the store",
            "format": "int32"
          },
          "totalOrders": {
            "type": "integer",
            "description": "Total orders in the store",
            "format": "int32"
          },
          "totalPendingOrders": {
            "type": "integer",
            "description": "Total pending orders in the store",
            "format": "int32"
          },
          "totalPaidAmount": {
            "type": "number",
            "description": "Total paid amount in the store",
            "format": "double"
          },
          "totalPaidOrders": {
            "type": "integer",
            "description": "Total paid orders in the store",
            "format": "int32"
          },
          "totalCancelledOrders": {
            "type": "integer",
            "description": "Total cancelled orders in the store",
            "format": "int32"
          },
          "totalReturnedOrders": {
            "type": "integer",
            "description": "Total returned orders",
            "format": "int32"
          },
          "totalShippedOrders": {
            "type": "integer",
            "description": "Total shipped orders",
            "format": "int32"
          },
          "totalPartiallyShippedOrders": {
            "type": "integer",
            "description": "Total partially shipped orders",
            "format": "int32"
          },
          "totalCompleteOrders": {
            "type": "integer",
            "description": "Total complete orders",
            "format": "int32"
          },
          "totalDelayedOrders": {
            "type": "integer",
            "description": "Total delayed orders",
            "format": "int32"
          },
          "totalClosedOrders": {
            "type": "integer",
            "description": "Total closed orders",
            "format": "int32"
          },
          "totalOnholdOrders": {
            "type": "integer",
            "description": "Total closed orders",
            "format": "int32"
          },
          "totalNewOrders": {
            "type": "integer",
            "description": "Total new orders",
            "format": "int32"
          },
          "totalProcessingOrders": {
            "type": "integer",
            "description": "Total processing orders",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Contains information about various totals"
      },
      "EvenCart.Areas.Administration.Models.Orders.OrderItemModel": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "attributeText": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "lineTotal": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "taxPercent": {
            "type": "number",
            "format": "double"
          },
          "shipped": {
            "type": "boolean"
          },
          "productSaleType": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.ProductSaleType"
          },
          "subscriptionCycle": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Shop.TimeCycle"
          },
          "cycleCount": {
            "type": "integer",
            "format": "int32"
          },
          "trialDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Users.UserModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "mobileNumber": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "updatedOn": {
            "type": "string",
            "format": "date-time"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTaxExempt": {
            "type": "boolean"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "lastLoginIpAddress": {
            "type": "string",
            "nullable": true
          },
          "referrerId": {
            "type": "integer",
            "format": "int32"
          },
          "newslettersEnabled": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Users.RoleModel"
            },
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "profilePictureId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "requirePasswordChange": {
            "type": "boolean"
          },
          "isAffiliate": {
            "type": "boolean"
          },
          "affiliateActive": {
            "type": "boolean"
          },
          "affiliateFirstActivationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Addresses.AddressModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address1": {
            "type": "string",
            "nullable": true
          },
          "address2": {
            "type": "string",
            "nullable": true
          },
          "landmark": {
            "type": "string",
            "nullable": true
          },
          "stateProvinceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "stateProvinceName": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zipPostalCode": {
            "type": "string",
            "nullable": true
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "addressType": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Addresses.AddressType"
          },
          "addressTypeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Orders.ShippingOptionModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the option",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "The rate of this shipping option",
            "format": "double"
          },
          "name": {
            "type": "string",
            "description": "The name of this shipping option",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the option",
            "nullable": true
          },
          "deliveryTime": {
            "type": "string",
            "description": "The delivery time of this option",
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Represents an individual shipping option of a shipment handler"
      },
      "EvenCart.Areas.Administration.Models.Orders.OrderModel": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "billingAddressId": {
            "type": "integer",
            "format": "int32"
          },
          "shippingAddressId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "paidOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveredOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippingMethodName": {
            "type": "string",
            "nullable": true
          },
          "shippingMethodDisplayName": {
            "type": "string",
            "nullable": true
          },
          "selectedShippingOption": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodName": {
            "type": "string",
            "nullable": true
          },
          "paymentMethodDisplayName": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "discountCoupon": {
            "type": "string",
            "nullable": true
          },
          "discountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "shippingMethodFee": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentMethodFee": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "orderTotal": {
            "type": "number",
            "format": "double"
          },
          "orderTotalFormatted": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "userGstNumber": {
            "type": "string",
            "nullable": true
          },
          "userIpAddress": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
          },
          "orderStatusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Payments.PaymentStatus"
          },
          "paymentStatusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "orderItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Orders.OrderItemModel"
            },
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Users.UserModel"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Addresses.AddressModel"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Addresses.AddressModel"
          },
          "isSubscription": {
            "type": "boolean"
          },
          "isSubscriptionActive": {
            "type": "boolean"
          },
          "lastInvoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextInvoiceDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedShippingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Orders.ShippingOptionModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.Reports.ProductOrderReportModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "totalOrders": {
            "type": "integer",
            "format": "int32"
          },
          "totalCustomers": {
            "type": "integer",
            "format": "int32"
          },
          "published": {
            "type": "boolean"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Reviews.AllReviewsSummaryModel": {
        "type": "object",
        "properties": {
          "fiveStarCount": {
            "type": "integer",
            "format": "int32"
          },
          "fourStarCount": {
            "type": "integer",
            "format": "int32"
          },
          "threeStarCount": {
            "type": "integer",
            "format": "int32"
          },
          "twoStarCount": {
            "type": "integer",
            "format": "int32"
          },
          "oneStarCount": {
            "type": "integer",
            "format": "int32"
          },
          "fiveStarPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "fourStarPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "threeStarPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "twoStarPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "oneStarPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalReviews": {
            "type": "integer",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Reviews.ReviewModel": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "The rating value between 1 and 5",
            "format": "int32"
          },
          "ratingPercent": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "description": "The title of the review",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the review",
            "nullable": true
          },
          "verifiedPurchase": {
            "type": "boolean",
            "description": "Specifies if the review was posted by the user who bought from the store. Ignored for POST requests."
          },
          "createdOn": {
            "type": "string",
            "description": "The creation date of review. Ignored for POST requests.",
            "format": "date-time"
          },
          "createdOnLocal": {
            "type": "string",
            "description": "The creation date of review in user's timezone",
            "format": "date-time",
            "readOnly": true
          },
          "private": {
            "type": "boolean",
            "description": "Specifies if user information should be kept private or public"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of user for review. Ignored for POST requests.",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "description": "The id of product for which review is being posted",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "description": "The id of order for which review is being posted",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/EvenCart.Models.Products.ProductModel"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Models.Reviews.PendingReviewModel": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "nullable": true
          },
          "orderGuid": {
            "type": "string",
            "nullable": true
          },
          "orderStatus": {
            "$ref": "#/components/schemas/EvenCart.Data.Entity.Purchases.OrderStatus"
          },
          "product": {
            "$ref": "#/components/schemas/EvenCart.Models.Products.ProductModel"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Areas.Administration.Models.System.AboutModel": {
        "type": "object",
        "properties": {
          "operatingSystemName": {
            "type": "string",
            "nullable": true
          },
          "aspNetVersion": {
            "type": "string",
            "nullable": true
          },
          "frameworkVersion": {
            "type": "string",
            "nullable": true
          },
          "timeZone": {
            "type": "string",
            "nullable": true
          },
          "utcTime": {
            "type": "string",
            "nullable": true
          },
          "loadedAssemblies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        },
        "description": "Represents a system and software information object"
      },
      "EvenCart.Areas.Administration.Models.Taxes.TaxRateModel": {
        "type": "object",
        "properties": {
          "taxId": {
            "type": "integer",
            "format": "int32"
          },
          "countryId": {
            "type": "integer",
            "format": "int32"
          },
          "stateOrProvinceId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zipOrPostalCode": {
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "nullable": true
          },
          "stateOrProvinceName": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      },
      "EvenCart.Data.Entity.Users.VendorStatus": {
        "enum": [
          "Pending",
          "Active",
          "Inactive",
          "Rejected"
        ],
        "type": "string"
      },
      "EvenCart.Areas.Administration.Models.Warehouse.WarehouseModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/EvenCart.Areas.Administration.Models.Addresses.AddressModel"
          },
          "displayOrder": {
            "type": "integer",
            "description": "The display order of the warehouse",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id of the resource",
            "format": "int32"
          },
          "formatted": {
            "$ref": "#/components/schemas/EvenCart.Infrastructure.Mvc.Formatters.DynamicFormatterObject"
          },
          "context": {
            "$ref": "#/components/schemas/DotLiquid.Context"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Account",
      "description": "Allows authenticated user to manage personal information"
    },
    {
      "name": "Addresses",
      "description": "Allows users to manage addresses"
    },
    {
      "name": "Authentication",
      "description": "Provides authentication related services including registration, login, password recovery etc."
    },
    {
      "name": "Cart",
      "description": "Allows authenticated user to manage cart"
    },
    {
      "name": "Checkout",
      "description": "Allows authenticated users to perform checkout activities"
    },
    {
      "name": "ConnectedAccounts",
      "description": "Manages connected accounts for a user"
    },
    {
      "name": "ContentPages",
      "description": "Allows users to get the content pages"
    },
    {
      "name": "Countries",
      "description": "Allows to retrieve list of available countries and states from store database"
    },
    {
      "name": "Dashboard",
      "description": "Allows user to set global preferences"
    },
    {
      "name": "Gdpr",
      "description": "Allows to manage GDPR settings for the authenticated user"
    },
    {
      "name": "Orders",
      "description": "Allows authenticated users to manage orders"
    },
    {
      "name": "Products",
      "description": "Allows user to get catalog data such as products"
    },
    {
      "name": "Reviews",
      "description": "Allows authenticated users to view and post reviews"
    },
    {
      "name": "Subscription",
      "description": "Manages subscriptions for a user"
    },
    {
      "name": "Users",
      "description": "Allows authenticated user to manage their personal info"
    },
    {
      "name": "AvailableAttributes",
      "description": "Available attributes are the attributes which are available for creation of product attributes. An available attribute can have multiple pre-defined values."
    },
    {
      "name": "CustomLabels",
      "description": "Custom labels are reusable text labels available for various operations such as cancellation, returns, product tags etc."
    },
    {
      "name": "Logs",
      "description": "Allows to view and delete activity logs"
    },
    {
      "name": "System",
      "description": "Allows admin to retrieve system information"
    },
    {
      "name": "Warehouse",
      "description": "Allows store admin to manage warehouses"
    }
  ]
}